// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_mmm_voodoo_Pipeline_ak (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        select_ln88_1,
        trunc_ln95,
        A_address0,
        A_ce0,
        A_q0,
        zext_ln89,
        B_address0,
        B_ce0,
        B_q0,
        accum_address0,
        accum_ce0,
        accum_we0,
        accum_d0,
        accum_address1,
        accum_ce1,
        accum_q1,
        grp_fu_125_p_din0,
        grp_fu_125_p_din1,
        grp_fu_125_p_opcode,
        grp_fu_125_p_dout0,
        grp_fu_125_p_ce,
        grp_fu_322_p_din0,
        grp_fu_322_p_din1,
        grp_fu_322_p_dout0,
        grp_fu_322_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [8:0] select_ln88_1;
input  [0:0] trunc_ln95;
output  [14:0] A_address0;
output   A_ce0;
input  [63:0] A_q0;
input  [8:0] zext_ln89;
output  [14:0] B_address0;
output   B_ce0;
input  [63:0] B_q0;
output  [2:0] accum_address0;
output   accum_ce0;
output   accum_we0;
output  [31:0] accum_d0;
output  [2:0] accum_address1;
output   accum_ce1;
input  [31:0] accum_q1;
output  [31:0] grp_fu_125_p_din0;
output  [31:0] grp_fu_125_p_din1;
output  [1:0] grp_fu_125_p_opcode;
input  [31:0] grp_fu_125_p_dout0;
output   grp_fu_125_p_ce;
output  [31:0] grp_fu_322_p_din0;
output  [31:0] grp_fu_322_p_din1;
input  [31:0] grp_fu_322_p_dout0;
output   grp_fu_322_p_ce;

reg ap_idle;
reg A_ce0;
reg B_ce0;
reg accum_ce0;
reg accum_we0;
reg accum_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] tmp_fu_161_p3;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] tmp_1_reg_311;
reg   [0:0] tmp_1_reg_311_pp0_iter1_reg;
reg   [0:0] tmp_1_reg_311_pp0_iter2_reg;
reg   [0:0] tmp_1_reg_311_pp0_iter3_reg;
reg   [0:0] tmp_1_reg_311_pp0_iter4_reg;
wire   [31:0] trunc_ln95_1_fu_242_p1;
reg   [31:0] trunc_ln95_1_reg_316;
wire   [31:0] trunc_ln95_2_fu_246_p1;
reg   [31:0] trunc_ln95_2_reg_321;
reg   [31:0] tmp_2_reg_326;
reg   [31:0] tmp_3_reg_331;
wire   [31:0] bitcast_ln95_fu_270_p1;
wire   [31:0] bitcast_ln95_1_fu_274_p1;
reg   [2:0] accum_addr_reg_356;
reg   [2:0] accum_addr_reg_356_pp0_iter6_reg;
reg   [2:0] accum_addr_reg_356_pp0_iter7_reg;
reg   [2:0] accum_addr_reg_356_pp0_iter8_reg;
reg   [2:0] accum_addr_reg_356_pp0_iter9_reg;
reg   [2:0] accum_addr_reg_356_pp0_iter10_reg;
reg   [2:0] accum_addr_reg_356_pp0_iter11_reg;
reg   [2:0] accum_addr_reg_356_pp0_iter12_reg;
reg   [2:0] accum_addr_reg_356_pp0_iter13_reg;
reg   [2:0] accum_addr_reg_356_pp0_iter14_reg;
reg   [2:0] accum_addr_reg_356_pp0_iter15_reg;
reg   [2:0] accum_addr_reg_356_pp0_iter16_reg;
reg   [2:0] accum_addr_reg_356_pp0_iter17_reg;
reg   [2:0] accum_addr_reg_356_pp0_iter18_reg;
reg   [2:0] accum_addr_reg_356_pp0_iter19_reg;
reg   [2:0] accum_addr_reg_356_pp0_iter20_reg;
reg   [2:0] accum_addr_reg_356_pp0_iter21_reg;
reg   [2:0] accum_addr_reg_356_pp0_iter22_reg;
reg   [31:0] mul_reg_362;
reg   [31:0] accum_load_reg_367;
wire   [31:0] grp_fu_145_p2;
reg   [31:0] mul_1_reg_372;
reg   [31:0] mul_1_reg_372_pp0_iter7_reg;
reg   [31:0] mul_1_reg_372_pp0_iter8_reg;
reg   [31:0] mul_1_reg_372_pp0_iter9_reg;
reg   [31:0] mul_1_reg_372_pp0_iter10_reg;
reg   [31:0] mul_1_reg_372_pp0_iter11_reg;
reg   [31:0] mul_1_reg_372_pp0_iter12_reg;
reg   [31:0] mul_1_reg_372_pp0_iter13_reg;
reg   [31:0] mul_1_reg_372_pp0_iter14_reg;
reg   [31:0] add_reg_377;
wire   [31:0] grp_fu_137_p2;
reg   [31:0] add_1_reg_382;
wire   [63:0] zext_ln95_1_fu_199_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln95_2_fu_218_p1;
wire   [63:0] zext_ln95_fu_286_p1;
reg   [8:0] k_fu_68;
wire   [8:0] add_ln93_fu_231_p2;
wire    ap_loop_init;
reg   [8:0] ap_sig_allocacmp_k_1;
wire   [31:0] grp_fu_145_p0;
wire   [31:0] grp_fu_145_p1;
wire   [7:0] tmp_5_fu_179_p4;
wire   [6:0] lshr_ln_fu_169_p4;
wire   [15:0] tmp_6_fu_189_p4;
wire   [14:0] tmp_7_fu_204_p3;
wire   [14:0] zext_ln89_cast_fu_149_p1;
wire   [14:0] add_ln95_fu_212_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_block_pp0_stage0_00001;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_done_reg = 1'b0;
end

top_fadd_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_8_full_dsp_1_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_reg_377),
    .din1(mul_1_reg_372_pp0_iter14_reg),
    .ce(1'b1),
    .dout(grp_fu_137_p2)
);

top_fmul_32ns_32ns_32_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_5_max_dsp_1_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_145_p0),
    .din1(grp_fu_145_p1),
    .ce(1'b1),
    .dout(grp_fu_145_p2)
);

top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter22_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (tmp_fu_161_p3 == 1'd0))) begin
            k_fu_68 <= add_ln93_fu_231_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            k_fu_68 <= 9'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        accum_addr_reg_356[0] <= zext_ln95_fu_286_p1[0];
        accum_addr_reg_356_pp0_iter10_reg[0] <= accum_addr_reg_356_pp0_iter9_reg[0];
        accum_addr_reg_356_pp0_iter11_reg[0] <= accum_addr_reg_356_pp0_iter10_reg[0];
        accum_addr_reg_356_pp0_iter12_reg[0] <= accum_addr_reg_356_pp0_iter11_reg[0];
        accum_addr_reg_356_pp0_iter13_reg[0] <= accum_addr_reg_356_pp0_iter12_reg[0];
        accum_addr_reg_356_pp0_iter14_reg[0] <= accum_addr_reg_356_pp0_iter13_reg[0];
        accum_addr_reg_356_pp0_iter15_reg[0] <= accum_addr_reg_356_pp0_iter14_reg[0];
        accum_addr_reg_356_pp0_iter16_reg[0] <= accum_addr_reg_356_pp0_iter15_reg[0];
        accum_addr_reg_356_pp0_iter17_reg[0] <= accum_addr_reg_356_pp0_iter16_reg[0];
        accum_addr_reg_356_pp0_iter18_reg[0] <= accum_addr_reg_356_pp0_iter17_reg[0];
        accum_addr_reg_356_pp0_iter19_reg[0] <= accum_addr_reg_356_pp0_iter18_reg[0];
        accum_addr_reg_356_pp0_iter20_reg[0] <= accum_addr_reg_356_pp0_iter19_reg[0];
        accum_addr_reg_356_pp0_iter21_reg[0] <= accum_addr_reg_356_pp0_iter20_reg[0];
        accum_addr_reg_356_pp0_iter22_reg[0] <= accum_addr_reg_356_pp0_iter21_reg[0];
        accum_addr_reg_356_pp0_iter6_reg[0] <= accum_addr_reg_356[0];
        accum_addr_reg_356_pp0_iter7_reg[0] <= accum_addr_reg_356_pp0_iter6_reg[0];
        accum_addr_reg_356_pp0_iter8_reg[0] <= accum_addr_reg_356_pp0_iter7_reg[0];
        accum_addr_reg_356_pp0_iter9_reg[0] <= accum_addr_reg_356_pp0_iter8_reg[0];
        add_1_reg_382 <= grp_fu_137_p2;
        add_reg_377 <= grp_fu_125_p_dout0;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        mul_1_reg_372 <= grp_fu_145_p2;
        mul_1_reg_372_pp0_iter10_reg <= mul_1_reg_372_pp0_iter9_reg;
        mul_1_reg_372_pp0_iter11_reg <= mul_1_reg_372_pp0_iter10_reg;
        mul_1_reg_372_pp0_iter12_reg <= mul_1_reg_372_pp0_iter11_reg;
        mul_1_reg_372_pp0_iter13_reg <= mul_1_reg_372_pp0_iter12_reg;
        mul_1_reg_372_pp0_iter14_reg <= mul_1_reg_372_pp0_iter13_reg;
        mul_1_reg_372_pp0_iter7_reg <= mul_1_reg_372;
        mul_1_reg_372_pp0_iter8_reg <= mul_1_reg_372_pp0_iter7_reg;
        mul_1_reg_372_pp0_iter9_reg <= mul_1_reg_372_pp0_iter8_reg;
        mul_reg_362 <= grp_fu_322_p_dout0;
        tmp_1_reg_311_pp0_iter2_reg <= tmp_1_reg_311_pp0_iter1_reg;
        tmp_1_reg_311_pp0_iter3_reg <= tmp_1_reg_311_pp0_iter2_reg;
        tmp_1_reg_311_pp0_iter4_reg <= tmp_1_reg_311_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        accum_load_reg_367 <= accum_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        tmp_1_reg_311_pp0_iter1_reg <= tmp_1_reg_311;
        tmp_2_reg_326 <= {{A_q0[63:32]}};
        tmp_3_reg_331 <= {{B_q0[63:32]}};
        trunc_ln95_1_reg_316 <= trunc_ln95_1_fu_242_p1;
        trunc_ln95_2_reg_321 <= trunc_ln95_2_fu_246_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_fu_161_p3 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_1_reg_311 <= ap_sig_allocacmp_k_1[32'd1];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        A_ce0 = 1'b1;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        B_ce0 = 1'b1;
    end else begin
        B_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        accum_ce0 = 1'b1;
    end else begin
        accum_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        accum_ce1 = 1'b1;
    end else begin
        accum_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        accum_we0 = 1'b1;
    end else begin
        accum_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_fu_161_p3 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter22_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_k_1 = 9'd0;
    end else begin
        ap_sig_allocacmp_k_1 = k_fu_68;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_address0 = zext_ln95_1_fu_199_p1;

assign B_address0 = zext_ln95_2_fu_218_p1;

assign accum_address0 = accum_addr_reg_356_pp0_iter22_reg;

assign accum_address1 = zext_ln95_fu_286_p1;

assign accum_d0 = add_1_reg_382;

assign add_ln93_fu_231_p2 = (ap_sig_allocacmp_k_1 + 9'd2);

assign add_ln95_fu_212_p2 = (tmp_7_fu_204_p3 + zext_ln89_cast_fu_149_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign bitcast_ln95_1_fu_274_p1 = trunc_ln95_2_reg_321;

assign bitcast_ln95_fu_270_p1 = trunc_ln95_1_reg_316;

assign grp_fu_125_p_ce = 1'b1;

assign grp_fu_125_p_din0 = accum_load_reg_367;

assign grp_fu_125_p_din1 = mul_reg_362;

assign grp_fu_125_p_opcode = 2'd0;

assign grp_fu_145_p0 = tmp_2_reg_326;

assign grp_fu_145_p1 = tmp_3_reg_331;

assign grp_fu_322_p_ce = 1'b1;

assign grp_fu_322_p_din0 = bitcast_ln95_fu_270_p1;

assign grp_fu_322_p_din1 = bitcast_ln95_1_fu_274_p1;

assign lshr_ln_fu_169_p4 = {{ap_sig_allocacmp_k_1[7:1]}};

assign tmp_5_fu_179_p4 = {{select_ln88_1[8:1]}};

assign tmp_6_fu_189_p4 = {{{tmp_5_fu_179_p4}, {trunc_ln95}}, {lshr_ln_fu_169_p4}};

assign tmp_7_fu_204_p3 = {{lshr_ln_fu_169_p4}, {8'd0}};

assign tmp_fu_161_p3 = ap_sig_allocacmp_k_1[32'd8];

assign trunc_ln95_1_fu_242_p1 = A_q0[31:0];

assign trunc_ln95_2_fu_246_p1 = B_q0[31:0];

assign zext_ln89_cast_fu_149_p1 = zext_ln89;

assign zext_ln95_1_fu_199_p1 = tmp_6_fu_189_p4;

assign zext_ln95_2_fu_218_p1 = add_ln95_fu_212_p2;

assign zext_ln95_fu_286_p1 = tmp_1_reg_311_pp0_iter4_reg;

always @ (posedge ap_clk) begin
    accum_addr_reg_356[2:1] <= 2'b00;
    accum_addr_reg_356_pp0_iter6_reg[2:1] <= 2'b00;
    accum_addr_reg_356_pp0_iter7_reg[2:1] <= 2'b00;
    accum_addr_reg_356_pp0_iter8_reg[2:1] <= 2'b00;
    accum_addr_reg_356_pp0_iter9_reg[2:1] <= 2'b00;
    accum_addr_reg_356_pp0_iter10_reg[2:1] <= 2'b00;
    accum_addr_reg_356_pp0_iter11_reg[2:1] <= 2'b00;
    accum_addr_reg_356_pp0_iter12_reg[2:1] <= 2'b00;
    accum_addr_reg_356_pp0_iter13_reg[2:1] <= 2'b00;
    accum_addr_reg_356_pp0_iter14_reg[2:1] <= 2'b00;
    accum_addr_reg_356_pp0_iter15_reg[2:1] <= 2'b00;
    accum_addr_reg_356_pp0_iter16_reg[2:1] <= 2'b00;
    accum_addr_reg_356_pp0_iter17_reg[2:1] <= 2'b00;
    accum_addr_reg_356_pp0_iter18_reg[2:1] <= 2'b00;
    accum_addr_reg_356_pp0_iter19_reg[2:1] <= 2'b00;
    accum_addr_reg_356_pp0_iter20_reg[2:1] <= 2'b00;
    accum_addr_reg_356_pp0_iter21_reg[2:1] <= 2'b00;
    accum_addr_reg_356_pp0_iter22_reg[2:1] <= 2'b00;
end

endmodule //top_mmm_voodoo_Pipeline_ak
