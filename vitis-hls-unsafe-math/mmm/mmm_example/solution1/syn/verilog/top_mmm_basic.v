// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module top_mmm_basic (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        C_address0,
        C_ce0,
        C_we0,
        C_d0,
        A_address0,
        A_ce0,
        A_q0,
        B_address0,
        B_ce0,
        B_q0,
        grp_fu_70_p_din0,
        grp_fu_70_p_din1,
        grp_fu_70_p_opcode,
        grp_fu_70_p_dout0,
        grp_fu_70_p_ce,
        grp_fu_74_p_din0,
        grp_fu_74_p_din1,
        grp_fu_74_p_dout0,
        grp_fu_74_p_ce
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_state2 = 4'd2;
parameter    ap_ST_fsm_state3 = 4'd4;
parameter    ap_ST_fsm_state4 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] C_address0;
output   C_ce0;
output   C_we0;
output  [31:0] C_d0;
output  [14:0] A_address0;
output   A_ce0;
input  [63:0] A_q0;
output  [14:0] B_address0;
output   B_ce0;
input  [63:0] B_q0;
output  [31:0] grp_fu_70_p_din0;
output  [31:0] grp_fu_70_p_din1;
output  [1:0] grp_fu_70_p_opcode;
input  [31:0] grp_fu_70_p_dout0;
output   grp_fu_70_p_ce;
output  [31:0] grp_fu_74_p_din0;
output  [31:0] grp_fu_74_p_din1;
input  [31:0] grp_fu_74_p_dout0;
output   grp_fu_74_p_ce;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg C_ce0;
reg C_we0;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [8:0] select_ln31_fu_139_p3;
reg   [8:0] select_ln31_reg_247;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln31_fu_109_p2;
wire   [8:0] select_ln31_1_fu_148_p3;
reg   [8:0] select_ln31_1_reg_252;
wire   [0:0] trunc_ln36_fu_169_p1;
reg   [0:0] trunc_ln36_reg_257;
wire   [15:0] add_ln33_fu_178_p2;
reg   [15:0] add_ln33_reg_262;
wire    grp_mmm_basic_Pipeline_ak_fu_79_ap_start;
wire    grp_mmm_basic_Pipeline_ak_fu_79_ap_done;
wire    grp_mmm_basic_Pipeline_ak_fu_79_ap_idle;
wire    grp_mmm_basic_Pipeline_ak_fu_79_ap_ready;
wire   [14:0] grp_mmm_basic_Pipeline_ak_fu_79_A_address0;
wire    grp_mmm_basic_Pipeline_ak_fu_79_A_ce0;
wire   [14:0] grp_mmm_basic_Pipeline_ak_fu_79_B_address0;
wire    grp_mmm_basic_Pipeline_ak_fu_79_B_ce0;
wire   [31:0] grp_mmm_basic_Pipeline_ak_fu_79_p_out;
wire    grp_mmm_basic_Pipeline_ak_fu_79_p_out_ap_vld;
wire   [31:0] grp_mmm_basic_Pipeline_ak_fu_79_grp_fu_267_p_din0;
wire   [31:0] grp_mmm_basic_Pipeline_ak_fu_79_grp_fu_267_p_din1;
wire   [1:0] grp_mmm_basic_Pipeline_ak_fu_79_grp_fu_267_p_opcode;
wire    grp_mmm_basic_Pipeline_ak_fu_79_grp_fu_267_p_ce;
wire   [31:0] grp_mmm_basic_Pipeline_ak_fu_79_grp_fu_271_p_din0;
wire   [31:0] grp_mmm_basic_Pipeline_ak_fu_79_grp_fu_271_p_din1;
wire    grp_mmm_basic_Pipeline_ak_fu_79_grp_fu_271_p_ce;
reg    grp_mmm_basic_Pipeline_ak_fu_79_ap_start_reg;
wire    ap_CS_fsm_state3;
wire   [63:0] zext_ln33_1_fu_205_p1;
wire    ap_CS_fsm_state4;
reg   [8:0] j_fu_50;
wire   [8:0] add_ln32_fu_184_p2;
reg   [8:0] i_fu_54;
reg   [16:0] indvar_flatten_fu_58;
wire   [16:0] add_ln31_1_fu_115_p2;
wire   [0:0] icmp_ln32_fu_133_p2;
wire   [8:0] add_ln31_fu_127_p2;
wire   [7:0] trunc_ln33_fu_157_p1;
wire   [15:0] tmp_8_cast_fu_161_p3;
wire   [15:0] zext_ln33_fu_174_p1;
reg    grp_fu_267_ce;
reg    grp_fu_271_ce;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 grp_mmm_basic_Pipeline_ak_fu_79_ap_start_reg = 1'b0;
end

top_mmm_basic_Pipeline_ak grp_mmm_basic_Pipeline_ak_fu_79(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mmm_basic_Pipeline_ak_fu_79_ap_start),
    .ap_done(grp_mmm_basic_Pipeline_ak_fu_79_ap_done),
    .ap_idle(grp_mmm_basic_Pipeline_ak_fu_79_ap_idle),
    .ap_ready(grp_mmm_basic_Pipeline_ak_fu_79_ap_ready),
    .select_ln31_1(select_ln31_1_reg_252),
    .trunc_ln36(trunc_ln36_reg_257),
    .A_address0(grp_mmm_basic_Pipeline_ak_fu_79_A_address0),
    .A_ce0(grp_mmm_basic_Pipeline_ak_fu_79_A_ce0),
    .A_q0(A_q0),
    .zext_ln32(select_ln31_reg_247),
    .B_address0(grp_mmm_basic_Pipeline_ak_fu_79_B_address0),
    .B_ce0(grp_mmm_basic_Pipeline_ak_fu_79_B_ce0),
    .B_q0(B_q0),
    .p_out(grp_mmm_basic_Pipeline_ak_fu_79_p_out),
    .p_out_ap_vld(grp_mmm_basic_Pipeline_ak_fu_79_p_out_ap_vld),
    .grp_fu_267_p_din0(grp_mmm_basic_Pipeline_ak_fu_79_grp_fu_267_p_din0),
    .grp_fu_267_p_din1(grp_mmm_basic_Pipeline_ak_fu_79_grp_fu_267_p_din1),
    .grp_fu_267_p_opcode(grp_mmm_basic_Pipeline_ak_fu_79_grp_fu_267_p_opcode),
    .grp_fu_267_p_dout0(grp_fu_70_p_dout0),
    .grp_fu_267_p_ce(grp_mmm_basic_Pipeline_ak_fu_79_grp_fu_267_p_ce),
    .grp_fu_271_p_din0(grp_mmm_basic_Pipeline_ak_fu_79_grp_fu_271_p_din0),
    .grp_fu_271_p_din1(grp_mmm_basic_Pipeline_ak_fu_79_grp_fu_271_p_din1),
    .grp_fu_271_p_dout0(grp_fu_74_p_dout0),
    .grp_fu_271_p_ce(grp_mmm_basic_Pipeline_ak_fu_79_grp_fu_271_p_ce)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mmm_basic_Pipeline_ak_fu_79_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln31_fu_109_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_mmm_basic_Pipeline_ak_fu_79_ap_start_reg <= 1'b1;
        end else if ((grp_mmm_basic_Pipeline_ak_fu_79_ap_ready == 1'b1)) begin
            grp_mmm_basic_Pipeline_ak_fu_79_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_54 <= 9'd0;
    end else if (((icmp_ln31_fu_109_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_fu_54 <= select_ln31_1_fu_148_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_fu_58 <= 17'd0;
    end else if (((icmp_ln31_fu_109_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        indvar_flatten_fu_58 <= add_ln31_1_fu_115_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_fu_50 <= 9'd0;
    end else if (((icmp_ln31_fu_109_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_fu_50 <= add_ln32_fu_184_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_fu_109_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        add_ln33_reg_262 <= add_ln33_fu_178_p2;
        select_ln31_1_reg_252 <= select_ln31_1_fu_148_p3;
        select_ln31_reg_247 <= select_ln31_fu_139_p3;
        trunc_ln36_reg_257 <= trunc_ln36_fu_169_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        C_ce0 = 1'b1;
    end else begin
        C_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        C_we0 = 1'b1;
    end else begin
        C_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_mmm_basic_Pipeline_ak_fu_79_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((((icmp_ln31_fu_109_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_fu_109_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_267_ce = grp_mmm_basic_Pipeline_ak_fu_79_grp_fu_267_p_ce;
    end else begin
        grp_fu_267_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        grp_fu_271_ce = grp_mmm_basic_Pipeline_ak_fu_79_grp_fu_271_p_ce;
    end else begin
        grp_fu_271_ce = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln31_fu_109_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_mmm_basic_Pipeline_ak_fu_79_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_address0 = grp_mmm_basic_Pipeline_ak_fu_79_A_address0;

assign A_ce0 = grp_mmm_basic_Pipeline_ak_fu_79_A_ce0;

assign B_address0 = grp_mmm_basic_Pipeline_ak_fu_79_B_address0;

assign B_ce0 = grp_mmm_basic_Pipeline_ak_fu_79_B_ce0;

assign C_address0 = zext_ln33_1_fu_205_p1;

assign C_d0 = grp_mmm_basic_Pipeline_ak_fu_79_p_out;

assign add_ln31_1_fu_115_p2 = (indvar_flatten_fu_58 + 17'd1);

assign add_ln31_fu_127_p2 = (i_fu_54 + 9'd1);

assign add_ln32_fu_184_p2 = (select_ln31_fu_139_p3 + 9'd1);

assign add_ln33_fu_178_p2 = (tmp_8_cast_fu_161_p3 + zext_ln33_fu_174_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign grp_fu_70_p_ce = grp_fu_267_ce;

assign grp_fu_70_p_din0 = grp_mmm_basic_Pipeline_ak_fu_79_grp_fu_267_p_din0;

assign grp_fu_70_p_din1 = grp_mmm_basic_Pipeline_ak_fu_79_grp_fu_267_p_din1;

assign grp_fu_70_p_opcode = 2'd0;

assign grp_fu_74_p_ce = grp_fu_271_ce;

assign grp_fu_74_p_din0 = grp_mmm_basic_Pipeline_ak_fu_79_grp_fu_271_p_din0;

assign grp_fu_74_p_din1 = grp_mmm_basic_Pipeline_ak_fu_79_grp_fu_271_p_din1;

assign grp_mmm_basic_Pipeline_ak_fu_79_ap_start = grp_mmm_basic_Pipeline_ak_fu_79_ap_start_reg;

assign icmp_ln31_fu_109_p2 = ((indvar_flatten_fu_58 == 17'd65536) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_133_p2 = ((j_fu_50 == 9'd256) ? 1'b1 : 1'b0);

assign select_ln31_1_fu_148_p3 = ((icmp_ln32_fu_133_p2[0:0] == 1'b1) ? add_ln31_fu_127_p2 : i_fu_54);

assign select_ln31_fu_139_p3 = ((icmp_ln32_fu_133_p2[0:0] == 1'b1) ? 9'd0 : j_fu_50);

assign tmp_8_cast_fu_161_p3 = {{trunc_ln33_fu_157_p1}, {8'd0}};

assign trunc_ln33_fu_157_p1 = select_ln31_1_fu_148_p3[7:0];

assign trunc_ln36_fu_169_p1 = select_ln31_1_fu_148_p3[0:0];

assign zext_ln33_1_fu_205_p1 = add_ln33_reg_262;

assign zext_ln33_fu_174_p1 = select_ln31_fu_139_p3;

endmodule //top_mmm_basic
