// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="top_top,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.454000,HLS_SYN_LAT=427425803,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=3141,HLS_SYN_LUT=3602,HLS_VERSION=2021_2}" *)

module top (
        ap_local_block,
        ap_local_deadlock,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        C_address0,
        C_ce0,
        C_we0,
        C_d0,
        A_address0,
        A_ce0,
        A_q0,
        B_address0,
        B_ce0,
        B_q0
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

output   ap_local_block;
output   ap_local_deadlock;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] C_address0;
output   C_ce0;
output   C_we0;
output  [31:0] C_d0;
output  [14:0] A_address0;
output   A_ce0;
input  [63:0] A_q0;
output  [14:0] B_address0;
output   B_ce0;
input  [63:0] B_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] C_address0;
reg C_ce0;
reg C_we0;
reg[31:0] C_d0;
reg[14:0] A_address0;
reg A_ce0;
reg[14:0] B_address0;
reg B_ce0;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    grp_mmm_basic_fu_30_ap_start;
wire    grp_mmm_basic_fu_30_ap_done;
wire    grp_mmm_basic_fu_30_ap_idle;
wire    grp_mmm_basic_fu_30_ap_ready;
wire   [15:0] grp_mmm_basic_fu_30_C_address0;
wire    grp_mmm_basic_fu_30_C_ce0;
wire    grp_mmm_basic_fu_30_C_we0;
wire   [31:0] grp_mmm_basic_fu_30_C_d0;
wire   [14:0] grp_mmm_basic_fu_30_A_address0;
wire    grp_mmm_basic_fu_30_A_ce0;
wire   [14:0] grp_mmm_basic_fu_30_B_address0;
wire    grp_mmm_basic_fu_30_B_ce0;
wire   [31:0] grp_mmm_basic_fu_30_grp_fu_70_p_din0;
wire   [31:0] grp_mmm_basic_fu_30_grp_fu_70_p_din1;
wire   [1:0] grp_mmm_basic_fu_30_grp_fu_70_p_opcode;
wire    grp_mmm_basic_fu_30_grp_fu_70_p_ce;
wire   [31:0] grp_mmm_basic_fu_30_grp_fu_74_p_din0;
wire   [31:0] grp_mmm_basic_fu_30_grp_fu_74_p_din1;
wire    grp_mmm_basic_fu_30_grp_fu_74_p_ce;
wire    grp_mmm_accum2_fu_40_ap_start;
wire    grp_mmm_accum2_fu_40_ap_done;
wire    grp_mmm_accum2_fu_40_ap_idle;
wire    grp_mmm_accum2_fu_40_ap_ready;
wire   [15:0] grp_mmm_accum2_fu_40_C_address0;
wire    grp_mmm_accum2_fu_40_C_ce0;
wire    grp_mmm_accum2_fu_40_C_we0;
wire   [31:0] grp_mmm_accum2_fu_40_C_d0;
wire   [14:0] grp_mmm_accum2_fu_40_A_address0;
wire    grp_mmm_accum2_fu_40_A_ce0;
wire   [14:0] grp_mmm_accum2_fu_40_B_address0;
wire    grp_mmm_accum2_fu_40_B_ce0;
wire   [31:0] grp_mmm_accum2_fu_40_grp_fu_70_p_din0;
wire   [31:0] grp_mmm_accum2_fu_40_grp_fu_70_p_din1;
wire   [1:0] grp_mmm_accum2_fu_40_grp_fu_70_p_opcode;
wire    grp_mmm_accum2_fu_40_grp_fu_70_p_ce;
wire   [31:0] grp_mmm_accum2_fu_40_grp_fu_74_p_din0;
wire   [31:0] grp_mmm_accum2_fu_40_grp_fu_74_p_din1;
wire    grp_mmm_accum2_fu_40_grp_fu_74_p_ce;
wire    grp_mmm_accum_fu_50_ap_start;
wire    grp_mmm_accum_fu_50_ap_done;
wire    grp_mmm_accum_fu_50_ap_idle;
wire    grp_mmm_accum_fu_50_ap_ready;
wire   [15:0] grp_mmm_accum_fu_50_C_address0;
wire    grp_mmm_accum_fu_50_C_ce0;
wire    grp_mmm_accum_fu_50_C_we0;
wire   [31:0] grp_mmm_accum_fu_50_C_d0;
wire   [14:0] grp_mmm_accum_fu_50_A_address0;
wire    grp_mmm_accum_fu_50_A_ce0;
wire   [14:0] grp_mmm_accum_fu_50_B_address0;
wire    grp_mmm_accum_fu_50_B_ce0;
wire   [31:0] grp_mmm_accum_fu_50_grp_fu_74_p_din0;
wire   [31:0] grp_mmm_accum_fu_50_grp_fu_74_p_din1;
wire    grp_mmm_accum_fu_50_grp_fu_74_p_ce;
wire   [31:0] grp_mmm_accum_fu_50_grp_fu_70_p_din0;
wire   [31:0] grp_mmm_accum_fu_50_grp_fu_70_p_din1;
wire   [1:0] grp_mmm_accum_fu_50_grp_fu_70_p_opcode;
wire    grp_mmm_accum_fu_50_grp_fu_70_p_ce;
wire    grp_mmm_voodoo_fu_60_ap_start;
wire    grp_mmm_voodoo_fu_60_ap_done;
wire    grp_mmm_voodoo_fu_60_ap_idle;
wire    grp_mmm_voodoo_fu_60_ap_ready;
wire   [15:0] grp_mmm_voodoo_fu_60_C_address0;
wire    grp_mmm_voodoo_fu_60_C_ce0;
wire    grp_mmm_voodoo_fu_60_C_we0;
wire   [31:0] grp_mmm_voodoo_fu_60_C_d0;
wire   [14:0] grp_mmm_voodoo_fu_60_A_address0;
wire    grp_mmm_voodoo_fu_60_A_ce0;
wire   [14:0] grp_mmm_voodoo_fu_60_B_address0;
wire    grp_mmm_voodoo_fu_60_B_ce0;
wire   [31:0] grp_mmm_voodoo_fu_60_grp_fu_70_p_din0;
wire   [31:0] grp_mmm_voodoo_fu_60_grp_fu_70_p_din1;
wire   [1:0] grp_mmm_voodoo_fu_60_grp_fu_70_p_opcode;
wire    grp_mmm_voodoo_fu_60_grp_fu_70_p_ce;
wire   [31:0] grp_mmm_voodoo_fu_60_grp_fu_74_p_din0;
wire   [31:0] grp_mmm_voodoo_fu_60_grp_fu_74_p_din1;
wire    grp_mmm_voodoo_fu_60_grp_fu_74_p_ce;
reg    grp_mmm_basic_fu_30_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_mmm_accum2_fu_40_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg    grp_mmm_accum_fu_50_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg    grp_mmm_voodoo_fu_60_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire   [31:0] grp_fu_70_p2;
reg   [31:0] grp_fu_70_p0;
reg   [31:0] grp_fu_70_p1;
reg    grp_fu_70_ce;
wire   [31:0] grp_fu_74_p2;
reg   [31:0] grp_fu_74_p0;
reg   [31:0] grp_fu_74_p1;
reg    grp_fu_74_ce;
reg   [7:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 grp_mmm_basic_fu_30_ap_start_reg = 1'b0;
#0 grp_mmm_accum2_fu_40_ap_start_reg = 1'b0;
#0 grp_mmm_accum_fu_50_ap_start_reg = 1'b0;
#0 grp_mmm_voodoo_fu_60_ap_start_reg = 1'b0;
end

top_mmm_basic grp_mmm_basic_fu_30(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mmm_basic_fu_30_ap_start),
    .ap_done(grp_mmm_basic_fu_30_ap_done),
    .ap_idle(grp_mmm_basic_fu_30_ap_idle),
    .ap_ready(grp_mmm_basic_fu_30_ap_ready),
    .C_address0(grp_mmm_basic_fu_30_C_address0),
    .C_ce0(grp_mmm_basic_fu_30_C_ce0),
    .C_we0(grp_mmm_basic_fu_30_C_we0),
    .C_d0(grp_mmm_basic_fu_30_C_d0),
    .A_address0(grp_mmm_basic_fu_30_A_address0),
    .A_ce0(grp_mmm_basic_fu_30_A_ce0),
    .A_q0(A_q0),
    .B_address0(grp_mmm_basic_fu_30_B_address0),
    .B_ce0(grp_mmm_basic_fu_30_B_ce0),
    .B_q0(B_q0),
    .grp_fu_70_p_din0(grp_mmm_basic_fu_30_grp_fu_70_p_din0),
    .grp_fu_70_p_din1(grp_mmm_basic_fu_30_grp_fu_70_p_din1),
    .grp_fu_70_p_opcode(grp_mmm_basic_fu_30_grp_fu_70_p_opcode),
    .grp_fu_70_p_dout0(grp_fu_70_p2),
    .grp_fu_70_p_ce(grp_mmm_basic_fu_30_grp_fu_70_p_ce),
    .grp_fu_74_p_din0(grp_mmm_basic_fu_30_grp_fu_74_p_din0),
    .grp_fu_74_p_din1(grp_mmm_basic_fu_30_grp_fu_74_p_din1),
    .grp_fu_74_p_dout0(grp_fu_74_p2),
    .grp_fu_74_p_ce(grp_mmm_basic_fu_30_grp_fu_74_p_ce)
);

top_mmm_accum2 grp_mmm_accum2_fu_40(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mmm_accum2_fu_40_ap_start),
    .ap_done(grp_mmm_accum2_fu_40_ap_done),
    .ap_idle(grp_mmm_accum2_fu_40_ap_idle),
    .ap_ready(grp_mmm_accum2_fu_40_ap_ready),
    .C_address0(grp_mmm_accum2_fu_40_C_address0),
    .C_ce0(grp_mmm_accum2_fu_40_C_ce0),
    .C_we0(grp_mmm_accum2_fu_40_C_we0),
    .C_d0(grp_mmm_accum2_fu_40_C_d0),
    .A_address0(grp_mmm_accum2_fu_40_A_address0),
    .A_ce0(grp_mmm_accum2_fu_40_A_ce0),
    .A_q0(A_q0),
    .B_address0(grp_mmm_accum2_fu_40_B_address0),
    .B_ce0(grp_mmm_accum2_fu_40_B_ce0),
    .B_q0(B_q0),
    .grp_fu_70_p_din0(grp_mmm_accum2_fu_40_grp_fu_70_p_din0),
    .grp_fu_70_p_din1(grp_mmm_accum2_fu_40_grp_fu_70_p_din1),
    .grp_fu_70_p_opcode(grp_mmm_accum2_fu_40_grp_fu_70_p_opcode),
    .grp_fu_70_p_dout0(grp_fu_70_p2),
    .grp_fu_70_p_ce(grp_mmm_accum2_fu_40_grp_fu_70_p_ce),
    .grp_fu_74_p_din0(grp_mmm_accum2_fu_40_grp_fu_74_p_din0),
    .grp_fu_74_p_din1(grp_mmm_accum2_fu_40_grp_fu_74_p_din1),
    .grp_fu_74_p_dout0(grp_fu_74_p2),
    .grp_fu_74_p_ce(grp_mmm_accum2_fu_40_grp_fu_74_p_ce)
);

top_mmm_accum grp_mmm_accum_fu_50(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mmm_accum_fu_50_ap_start),
    .ap_done(grp_mmm_accum_fu_50_ap_done),
    .ap_idle(grp_mmm_accum_fu_50_ap_idle),
    .ap_ready(grp_mmm_accum_fu_50_ap_ready),
    .C_address0(grp_mmm_accum_fu_50_C_address0),
    .C_ce0(grp_mmm_accum_fu_50_C_ce0),
    .C_we0(grp_mmm_accum_fu_50_C_we0),
    .C_d0(grp_mmm_accum_fu_50_C_d0),
    .A_address0(grp_mmm_accum_fu_50_A_address0),
    .A_ce0(grp_mmm_accum_fu_50_A_ce0),
    .A_q0(A_q0),
    .B_address0(grp_mmm_accum_fu_50_B_address0),
    .B_ce0(grp_mmm_accum_fu_50_B_ce0),
    .B_q0(B_q0),
    .grp_fu_74_p_din0(grp_mmm_accum_fu_50_grp_fu_74_p_din0),
    .grp_fu_74_p_din1(grp_mmm_accum_fu_50_grp_fu_74_p_din1),
    .grp_fu_74_p_dout0(grp_fu_74_p2),
    .grp_fu_74_p_ce(grp_mmm_accum_fu_50_grp_fu_74_p_ce),
    .grp_fu_70_p_din0(grp_mmm_accum_fu_50_grp_fu_70_p_din0),
    .grp_fu_70_p_din1(grp_mmm_accum_fu_50_grp_fu_70_p_din1),
    .grp_fu_70_p_opcode(grp_mmm_accum_fu_50_grp_fu_70_p_opcode),
    .grp_fu_70_p_dout0(grp_fu_70_p2),
    .grp_fu_70_p_ce(grp_mmm_accum_fu_50_grp_fu_70_p_ce)
);

top_mmm_voodoo grp_mmm_voodoo_fu_60(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mmm_voodoo_fu_60_ap_start),
    .ap_done(grp_mmm_voodoo_fu_60_ap_done),
    .ap_idle(grp_mmm_voodoo_fu_60_ap_idle),
    .ap_ready(grp_mmm_voodoo_fu_60_ap_ready),
    .C_address0(grp_mmm_voodoo_fu_60_C_address0),
    .C_ce0(grp_mmm_voodoo_fu_60_C_ce0),
    .C_we0(grp_mmm_voodoo_fu_60_C_we0),
    .C_d0(grp_mmm_voodoo_fu_60_C_d0),
    .A_address0(grp_mmm_voodoo_fu_60_A_address0),
    .A_ce0(grp_mmm_voodoo_fu_60_A_ce0),
    .A_q0(A_q0),
    .B_address0(grp_mmm_voodoo_fu_60_B_address0),
    .B_ce0(grp_mmm_voodoo_fu_60_B_ce0),
    .B_q0(B_q0),
    .grp_fu_70_p_din0(grp_mmm_voodoo_fu_60_grp_fu_70_p_din0),
    .grp_fu_70_p_din1(grp_mmm_voodoo_fu_60_grp_fu_70_p_din1),
    .grp_fu_70_p_opcode(grp_mmm_voodoo_fu_60_grp_fu_70_p_opcode),
    .grp_fu_70_p_dout0(grp_fu_70_p2),
    .grp_fu_70_p_ce(grp_mmm_voodoo_fu_60_grp_fu_70_p_ce),
    .grp_fu_74_p_din0(grp_mmm_voodoo_fu_60_grp_fu_74_p_din0),
    .grp_fu_74_p_din1(grp_mmm_voodoo_fu_60_grp_fu_74_p_din1),
    .grp_fu_74_p_dout0(grp_fu_74_p2),
    .grp_fu_74_p_ce(grp_mmm_voodoo_fu_60_grp_fu_74_p_ce)
);

top_fadd_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_8_full_dsp_1_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_70_p0),
    .din1(grp_fu_70_p1),
    .ce(grp_fu_70_ce),
    .dout(grp_fu_70_p2)
);

top_fmul_32ns_32ns_32_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_5_max_dsp_1_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_74_p0),
    .din1(grp_fu_74_p1),
    .ce(grp_fu_74_ce),
    .dout(grp_fu_74_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mmm_accum2_fu_40_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state3)) begin
            grp_mmm_accum2_fu_40_ap_start_reg <= 1'b1;
        end else if ((grp_mmm_accum2_fu_40_ap_ready == 1'b1)) begin
            grp_mmm_accum2_fu_40_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mmm_accum_fu_50_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_mmm_accum_fu_50_ap_start_reg <= 1'b1;
        end else if ((grp_mmm_accum_fu_50_ap_ready == 1'b1)) begin
            grp_mmm_accum_fu_50_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mmm_basic_fu_30_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_mmm_basic_fu_30_ap_start_reg <= 1'b1;
        end else if ((grp_mmm_basic_fu_30_ap_ready == 1'b1)) begin
            grp_mmm_basic_fu_30_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mmm_voodoo_fu_60_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_mmm_voodoo_fu_60_ap_start_reg <= 1'b1;
        end else if ((grp_mmm_voodoo_fu_60_ap_ready == 1'b1)) begin
            grp_mmm_voodoo_fu_60_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        A_address0 = grp_mmm_voodoo_fu_60_A_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        A_address0 = grp_mmm_accum_fu_50_A_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        A_address0 = grp_mmm_accum2_fu_40_A_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        A_address0 = grp_mmm_basic_fu_30_A_address0;
    end else begin
        A_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        A_ce0 = grp_mmm_voodoo_fu_60_A_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        A_ce0 = grp_mmm_accum_fu_50_A_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        A_ce0 = grp_mmm_accum2_fu_40_A_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        A_ce0 = grp_mmm_basic_fu_30_A_ce0;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        B_address0 = grp_mmm_voodoo_fu_60_B_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        B_address0 = grp_mmm_accum_fu_50_B_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        B_address0 = grp_mmm_accum2_fu_40_B_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        B_address0 = grp_mmm_basic_fu_30_B_address0;
    end else begin
        B_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        B_ce0 = grp_mmm_voodoo_fu_60_B_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        B_ce0 = grp_mmm_accum_fu_50_B_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        B_ce0 = grp_mmm_accum2_fu_40_B_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        B_ce0 = grp_mmm_basic_fu_30_B_ce0;
    end else begin
        B_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        C_address0 = grp_mmm_voodoo_fu_60_C_address0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        C_address0 = grp_mmm_accum_fu_50_C_address0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        C_address0 = grp_mmm_accum2_fu_40_C_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        C_address0 = grp_mmm_basic_fu_30_C_address0;
    end else begin
        C_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        C_ce0 = grp_mmm_voodoo_fu_60_C_ce0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        C_ce0 = grp_mmm_accum_fu_50_C_ce0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        C_ce0 = grp_mmm_accum2_fu_40_C_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        C_ce0 = grp_mmm_basic_fu_30_C_ce0;
    end else begin
        C_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        C_d0 = grp_mmm_voodoo_fu_60_C_d0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        C_d0 = grp_mmm_accum_fu_50_C_d0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        C_d0 = grp_mmm_accum2_fu_40_C_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        C_d0 = grp_mmm_basic_fu_30_C_d0;
    end else begin
        C_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        C_we0 = grp_mmm_voodoo_fu_60_C_we0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        C_we0 = grp_mmm_accum_fu_50_C_we0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        C_we0 = grp_mmm_accum2_fu_40_C_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        C_we0 = grp_mmm_basic_fu_30_C_we0;
    end else begin
        C_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_mmm_basic_fu_30_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((grp_mmm_accum2_fu_40_ap_done == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_mmm_accum_fu_50_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((grp_mmm_voodoo_fu_60_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (grp_mmm_voodoo_fu_60_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) & (grp_mmm_voodoo_fu_60_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_70_ce = grp_mmm_voodoo_fu_60_grp_fu_70_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_70_ce = grp_mmm_accum_fu_50_grp_fu_70_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_70_ce = grp_mmm_accum2_fu_40_grp_fu_70_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_70_ce = grp_mmm_basic_fu_30_grp_fu_70_p_ce;
    end else begin
        grp_fu_70_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_70_p0 = grp_mmm_voodoo_fu_60_grp_fu_70_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_70_p0 = grp_mmm_accum_fu_50_grp_fu_70_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_70_p0 = grp_mmm_accum2_fu_40_grp_fu_70_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_70_p0 = grp_mmm_basic_fu_30_grp_fu_70_p_din0;
    end else begin
        grp_fu_70_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_70_p1 = grp_mmm_voodoo_fu_60_grp_fu_70_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_70_p1 = grp_mmm_accum_fu_50_grp_fu_70_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_70_p1 = grp_mmm_accum2_fu_40_grp_fu_70_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_70_p1 = grp_mmm_basic_fu_30_grp_fu_70_p_din1;
    end else begin
        grp_fu_70_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_74_ce = grp_mmm_voodoo_fu_60_grp_fu_74_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_74_ce = grp_mmm_accum_fu_50_grp_fu_74_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_74_ce = grp_mmm_accum2_fu_40_grp_fu_74_p_ce;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_74_ce = grp_mmm_basic_fu_30_grp_fu_74_p_ce;
    end else begin
        grp_fu_74_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_74_p0 = grp_mmm_voodoo_fu_60_grp_fu_74_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_74_p0 = grp_mmm_accum_fu_50_grp_fu_74_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_74_p0 = grp_mmm_accum2_fu_40_grp_fu_74_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_74_p0 = grp_mmm_basic_fu_30_grp_fu_74_p_din0;
    end else begin
        grp_fu_74_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_74_p1 = grp_mmm_voodoo_fu_60_grp_fu_74_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_74_p1 = grp_mmm_accum_fu_50_grp_fu_74_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_fu_74_p1 = grp_mmm_accum2_fu_40_grp_fu_74_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        grp_fu_74_p1 = grp_mmm_basic_fu_30_grp_fu_74_p_din1;
    end else begin
        grp_fu_74_p1 = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_mmm_basic_fu_30_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_mmm_accum2_fu_40_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_mmm_accum_fu_50_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_mmm_voodoo_fu_60_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_local_block = 1'b0;

assign ap_local_deadlock = 1'b0;

assign grp_mmm_accum2_fu_40_ap_start = grp_mmm_accum2_fu_40_ap_start_reg;

assign grp_mmm_accum_fu_50_ap_start = grp_mmm_accum_fu_50_ap_start_reg;

assign grp_mmm_basic_fu_30_ap_start = grp_mmm_basic_fu_30_ap_start_reg;

assign grp_mmm_voodoo_fu_60_ap_start = grp_mmm_voodoo_fu_60_ap_start_reg;

endmodule //top
