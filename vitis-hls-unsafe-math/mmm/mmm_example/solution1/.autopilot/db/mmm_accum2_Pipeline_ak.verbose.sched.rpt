

================================================================
== Vitis HLS Report for 'mmm_accum2_Pipeline_ak'
================================================================
* Date:           Sun Jul 10 13:00:24 2022

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:47:39 MDT 2021)
* Project:        mmm_example
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvc1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  5.00 ns|  3.454 ns|     1.35 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     2184|     2184|  10.920 us|  10.920 us|  2184|  2184|       no|
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- ak      |     2182|     2182|        24|         17|          1|   128|       yes|
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 17, depth = 24


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 24
* Pipeline : 1
  Pipeline-0 : II = 17, D = 24, States = { 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.07>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%k = alloca i32 1"   --->   Operation 27 'alloca' 'k' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%accum_1 = alloca i32 1"   --->   Operation 28 'alloca' 'accum_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%accum_1_3 = alloca i32 1"   --->   Operation 29 'alloca' 'accum_1_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%zext_ln69_read = read i9 @_ssdm_op_Read.ap_auto.i9, i9 %zext_ln69"   --->   Operation 30 'read' 'zext_ln69_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%trunc_ln75_1_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %trunc_ln75_1"   --->   Operation 31 'read' 'trunc_ln75_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%select_ln68_1_read = read i9 @_ssdm_op_Read.ap_auto.i9, i9 %select_ln68_1"   --->   Operation 32 'read' 'select_ln68_1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%accum_0_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %accum_0_2_reload"   --->   Operation 33 'read' 'accum_0_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%accum_1_2_reload_read = read i32 @_ssdm_op_Read.ap_auto.float, i32 %accum_1_2_reload"   --->   Operation 34 'read' 'accum_1_2_reload_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln69_cast = zext i9 %zext_ln69_read"   --->   Operation 35 'zext' 'zext_ln69_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %A, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 36 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %B, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 37 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %accum_1_2_reload_read, i32 %accum_1_3"   --->   Operation 38 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 39 [1/1] (0.42ns)   --->   "%store_ln0 = store i32 %accum_0_2_reload_read, i32 %accum_1"   --->   Operation 39 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 40 [1/1] (0.42ns)   --->   "%store_ln0 = store i9 0, i9 %k"   --->   Operation 40 'store' 'store_ln0' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 41 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.preheader"   --->   Operation 41 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 42 [1/1] (0.00ns)   --->   "%k_4 = load i9 %k" [mmm.cpp:75]   --->   Operation 42 'load' 'k_4' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 43 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [1/1] (0.00ns)   --->   "%tmp = bitselect i1 @_ssdm_op_BitSelect.i1.i9.i32, i9 %k_4, i32 8" [mmm.cpp:73]   --->   Operation 44 'bitselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 45 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 128, i64 128, i64 128"   --->   Operation 45 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%br_ln73 = br i1 %tmp, void %.split, void %.exitStub" [mmm.cpp:73]   --->   Operation 46 'br' 'br_ln73' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%lshr_ln = partselect i7 @_ssdm_op_PartSelect.i7.i9.i32.i32, i9 %k_4, i32 1, i32 7" [mmm.cpp:75]   --->   Operation 47 'partselect' 'lshr_ln' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%tmp_s = partselect i8 @_ssdm_op_PartSelect.i8.i9.i32.i32, i9 %select_ln68_1_read, i32 1, i32 8" [mmm.cpp:75]   --->   Operation 48 'partselect' 'tmp_s' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_5 = bitconcatenate i16 @_ssdm_op_BitConcatenate.i16.i8.i1.i7, i8 %tmp_s, i1 %trunc_ln75_1_read, i7 %lshr_ln" [mmm.cpp:75]   --->   Operation 49 'bitconcatenate' 'tmp_5' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%zext_ln75 = zext i16 %tmp_5" [mmm.cpp:75]   --->   Operation 50 'zext' 'zext_ln75' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%A_addr = getelementptr i64 %A, i64 0, i64 %zext_ln75" [mmm.cpp:75]   --->   Operation 51 'getelementptr' 'A_addr' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%tmp_6 = bitconcatenate i15 @_ssdm_op_BitConcatenate.i15.i7.i8, i7 %lshr_ln, i8 0" [mmm.cpp:75]   --->   Operation 52 'bitconcatenate' 'tmp_6' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.84ns)   --->   "%add_ln75 = add i15 %tmp_6, i15 %zext_ln69_cast" [mmm.cpp:75]   --->   Operation 53 'add' 'add_ln75' <Predicate = (!tmp)> <Delay = 0.84> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%zext_ln75_1 = zext i15 %add_ln75" [mmm.cpp:75]   --->   Operation 54 'zext' 'zext_ln75_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%B_addr = getelementptr i64 %B, i64 0, i64 %zext_ln75_1" [mmm.cpp:75]   --->   Operation 55 'getelementptr' 'B_addr' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 56 [2/2] (1.23ns)   --->   "%A_load = load i15 %A_addr" [mmm.cpp:75]   --->   Operation 56 'load' 'A_load' <Predicate = (!tmp)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 32768> <RAM>
ST_1 : Operation 57 [2/2] (1.23ns)   --->   "%B_load = load i15 %B_addr" [mmm.cpp:75]   --->   Operation 57 'load' 'B_load' <Predicate = (!tmp)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 32768> <RAM>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_2 = bitselect i1 @_ssdm_op_BitSelect.i1.i9.i32, i9 %k_4, i32 1" [mmm.cpp:75]   --->   Operation 58 'bitselect' 'tmp_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_1 : Operation 59 [1/1] (0.77ns)   --->   "%add_ln73 = add i9 %k_4, i9 2" [mmm.cpp:73]   --->   Operation 59 'add' 'add_ln73' <Predicate = (!tmp)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 60 [1/1] (0.42ns)   --->   "%store_ln73 = store i9 %add_ln73, i9 %k" [mmm.cpp:73]   --->   Operation 60 'store' 'store_ln73' <Predicate = (!tmp)> <Delay = 0.42>

State 2 <SV = 1> <Delay = 1.23>
ST_2 : Operation 61 [1/2] (1.23ns)   --->   "%A_load = load i15 %A_addr" [mmm.cpp:75]   --->   Operation 61 'load' 'A_load' <Predicate = (!tmp)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 32768> <RAM>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%trunc_ln75 = trunc i64 %A_load" [mmm.cpp:75]   --->   Operation 62 'trunc' 'trunc_ln75' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 63 [1/2] (1.23ns)   --->   "%B_load = load i15 %B_addr" [mmm.cpp:75]   --->   Operation 63 'load' 'B_load' <Predicate = (!tmp)> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 64> <Depth = 32768> <RAM>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%trunc_ln75_2 = trunc i64 %B_load" [mmm.cpp:75]   --->   Operation 64 'trunc' 'trunc_ln75_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%tmp_8 = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %A_load, i32 32, i32 63" [mmm.cpp:75]   --->   Operation 65 'partselect' 'tmp_8' <Predicate = (!tmp)> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%tmp_9 = partselect i32 @_ssdm_op_PartSelect.i32.i64.i32.i32, i64 %B_load, i32 32, i32 63" [mmm.cpp:75]   --->   Operation 66 'partselect' 'tmp_9' <Predicate = (!tmp)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 3.17>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%bitcast_ln75 = bitcast i32 %trunc_ln75" [mmm.cpp:75]   --->   Operation 67 'bitcast' 'bitcast_ln75' <Predicate = (!tmp)> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%bitcast_ln75_1 = bitcast i32 %trunc_ln75_2" [mmm.cpp:75]   --->   Operation 68 'bitcast' 'bitcast_ln75_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_3 : Operation 69 [5/5] (3.17ns)   --->   "%mul = fmul i32 %bitcast_ln75, i32 %bitcast_ln75_1" [mmm.cpp:75]   --->   Operation 69 'fmul' 'mul' <Predicate = (!tmp)> <Delay = 3.17> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 4> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 3.17>
ST_4 : Operation 70 [4/5] (3.17ns)   --->   "%mul = fmul i32 %bitcast_ln75, i32 %bitcast_ln75_1" [mmm.cpp:75]   --->   Operation 70 'fmul' 'mul' <Predicate = (!tmp)> <Delay = 3.17> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 4> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 71 [1/1] (0.00ns)   --->   "%bitcast_ln75_2 = bitcast i32 %tmp_8" [mmm.cpp:75]   --->   Operation 71 'bitcast' 'bitcast_ln75_2' <Predicate = (!tmp)> <Delay = 0.00>
ST_4 : Operation 72 [1/1] (0.00ns)   --->   "%bitcast_ln75_3 = bitcast i32 %tmp_9" [mmm.cpp:75]   --->   Operation 72 'bitcast' 'bitcast_ln75_3' <Predicate = (!tmp)> <Delay = 0.00>
ST_4 : Operation 73 [5/5] (3.17ns)   --->   "%mul_1 = fmul i32 %bitcast_ln75_2, i32 %bitcast_ln75_3" [mmm.cpp:75]   --->   Operation 73 'fmul' 'mul_1' <Predicate = (!tmp)> <Delay = 3.17> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 4> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 3.17>
ST_5 : Operation 74 [3/5] (3.17ns)   --->   "%mul = fmul i32 %bitcast_ln75, i32 %bitcast_ln75_1" [mmm.cpp:75]   --->   Operation 74 'fmul' 'mul' <Predicate = (!tmp)> <Delay = 3.17> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 4> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 75 [4/5] (3.17ns)   --->   "%mul_1 = fmul i32 %bitcast_ln75_2, i32 %bitcast_ln75_3" [mmm.cpp:75]   --->   Operation 75 'fmul' 'mul_1' <Predicate = (!tmp)> <Delay = 3.17> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 4> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 3.17>
ST_6 : Operation 76 [2/5] (3.17ns)   --->   "%mul = fmul i32 %bitcast_ln75, i32 %bitcast_ln75_1" [mmm.cpp:75]   --->   Operation 76 'fmul' 'mul' <Predicate = (!tmp)> <Delay = 3.17> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 4> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 77 [3/5] (3.17ns)   --->   "%mul_1 = fmul i32 %bitcast_ln75_2, i32 %bitcast_ln75_3" [mmm.cpp:75]   --->   Operation 77 'fmul' 'mul_1' <Predicate = (!tmp)> <Delay = 3.17> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 4> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 3.17>
ST_7 : Operation 78 [1/1] (0.00ns)   --->   "%accum_1_load_1 = load i32 %accum_1" [mmm.cpp:75]   --->   Operation 78 'load' 'accum_1_load_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_7 : Operation 79 [1/1] (0.00ns)   --->   "%accum_1_3_load_1 = load i32 %accum_1_3" [mmm.cpp:75]   --->   Operation 79 'load' 'accum_1_3_load_1' <Predicate = (!tmp)> <Delay = 0.00>
ST_7 : Operation 80 [1/5] (3.17ns)   --->   "%mul = fmul i32 %bitcast_ln75, i32 %bitcast_ln75_1" [mmm.cpp:75]   --->   Operation 80 'fmul' 'mul' <Predicate = (!tmp)> <Delay = 3.17> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 4> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 81 [1/1] (0.44ns)   --->   "%select_ln75 = select i1 %tmp_2, i32 %accum_1_3_load_1, i32 %accum_1_load_1" [mmm.cpp:75]   --->   Operation 81 'select' 'select_ln75' <Predicate = (!tmp)> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 82 [2/5] (3.17ns)   --->   "%mul_1 = fmul i32 %bitcast_ln75_2, i32 %bitcast_ln75_3" [mmm.cpp:75]   --->   Operation 82 'fmul' 'mul_1' <Predicate = (!tmp)> <Delay = 3.17> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 4> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 106 [1/1] (0.00ns)   --->   "%accum_1_load = load i32 %accum_1"   --->   Operation 106 'load' 'accum_1_load' <Predicate = (tmp)> <Delay = 0.00>
ST_7 : Operation 107 [1/1] (0.00ns)   --->   "%accum_1_3_load = load i32 %accum_1_3"   --->   Operation 107 'load' 'accum_1_3_load' <Predicate = (tmp)> <Delay = 0.00>
ST_7 : Operation 108 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %accum_1_4_out, i32 %accum_1_3_load"   --->   Operation 108 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_7 : Operation 109 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.floatP0A, i32 %accum_0_4_out, i32 %accum_1_load"   --->   Operation 109 'write' 'write_ln0' <Predicate = (tmp)> <Delay = 0.00>
ST_7 : Operation 110 [1/1] (0.00ns)   --->   "%ret_ln0 = ret"   --->   Operation 110 'ret' 'ret_ln0' <Predicate = (tmp)> <Delay = 0.00>

State 8 <SV = 7> <Delay = 3.45>
ST_8 : Operation 83 [8/8] (3.45ns)   --->   "%add = fadd i32 %select_ln75, i32 %mul" [mmm.cpp:75]   --->   Operation 83 'fadd' 'add' <Predicate = (!tmp)> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 84 [1/5] (3.17ns)   --->   "%mul_1 = fmul i32 %bitcast_ln75_2, i32 %bitcast_ln75_3" [mmm.cpp:75]   --->   Operation 84 'fmul' 'mul_1' <Predicate = (!tmp)> <Delay = 3.17> <CoreInst = "FMul_maxdsp">   --->   Core 30 'FMul_maxdsp' <Latency = 4> <II = 1> <Delay = 3.17> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 3.45>
ST_9 : Operation 85 [7/8] (3.45ns)   --->   "%add = fadd i32 %select_ln75, i32 %mul" [mmm.cpp:75]   --->   Operation 85 'fadd' 'add' <Predicate = (!tmp)> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 3.45>
ST_10 : Operation 86 [6/8] (3.45ns)   --->   "%add = fadd i32 %select_ln75, i32 %mul" [mmm.cpp:75]   --->   Operation 86 'fadd' 'add' <Predicate = (!tmp)> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 3.45>
ST_11 : Operation 87 [5/8] (3.45ns)   --->   "%add = fadd i32 %select_ln75, i32 %mul" [mmm.cpp:75]   --->   Operation 87 'fadd' 'add' <Predicate = (!tmp)> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 3.45>
ST_12 : Operation 88 [4/8] (3.45ns)   --->   "%add = fadd i32 %select_ln75, i32 %mul" [mmm.cpp:75]   --->   Operation 88 'fadd' 'add' <Predicate = (!tmp)> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 3.45>
ST_13 : Operation 89 [3/8] (3.45ns)   --->   "%add = fadd i32 %select_ln75, i32 %mul" [mmm.cpp:75]   --->   Operation 89 'fadd' 'add' <Predicate = (!tmp)> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 3.45>
ST_14 : Operation 90 [2/8] (3.45ns)   --->   "%add = fadd i32 %select_ln75, i32 %mul" [mmm.cpp:75]   --->   Operation 90 'fadd' 'add' <Predicate = (!tmp)> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 3.45>
ST_15 : Operation 91 [1/8] (3.45ns)   --->   "%add = fadd i32 %select_ln75, i32 %mul" [mmm.cpp:75]   --->   Operation 91 'fadd' 'add' <Predicate = (!tmp)> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 3.45>
ST_16 : Operation 92 [8/8] (3.45ns)   --->   "%accum_0 = fadd i32 %add, i32 %mul_1" [mmm.cpp:75]   --->   Operation 92 'fadd' 'accum_0' <Predicate = (!tmp)> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 3.45>
ST_17 : Operation 93 [7/8] (3.45ns)   --->   "%accum_0 = fadd i32 %add, i32 %mul_1" [mmm.cpp:75]   --->   Operation 93 'fadd' 'accum_0' <Predicate = (!tmp)> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 3.45>
ST_18 : Operation 94 [6/8] (3.45ns)   --->   "%accum_0 = fadd i32 %add, i32 %mul_1" [mmm.cpp:75]   --->   Operation 94 'fadd' 'accum_0' <Predicate = true> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 3.45>
ST_19 : Operation 95 [5/8] (3.45ns)   --->   "%accum_0 = fadd i32 %add, i32 %mul_1" [mmm.cpp:75]   --->   Operation 95 'fadd' 'accum_0' <Predicate = true> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 3.45>
ST_20 : Operation 96 [4/8] (3.45ns)   --->   "%accum_0 = fadd i32 %add, i32 %mul_1" [mmm.cpp:75]   --->   Operation 96 'fadd' 'accum_0' <Predicate = true> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 20> <Delay = 3.45>
ST_21 : Operation 97 [3/8] (3.45ns)   --->   "%accum_0 = fadd i32 %add, i32 %mul_1" [mmm.cpp:75]   --->   Operation 97 'fadd' 'accum_0' <Predicate = true> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 3.45>
ST_22 : Operation 98 [2/8] (3.45ns)   --->   "%accum_0 = fadd i32 %add, i32 %mul_1" [mmm.cpp:75]   --->   Operation 98 'fadd' 'accum_0' <Predicate = true> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 3.45>
ST_23 : Operation 99 [1/8] (3.45ns)   --->   "%accum_0 = fadd i32 %add, i32 %mul_1" [mmm.cpp:75]   --->   Operation 99 'fadd' 'accum_0' <Predicate = true> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 0.87>
ST_24 : Operation 100 [1/1] (0.00ns)   --->   "%specloopname_ln66 = specloopname void @_ssdm_op_SpecLoopName, void @empty_2" [mmm.cpp:66]   --->   Operation 100 'specloopname' 'specloopname_ln66' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 101 [1/1] (0.44ns)   --->   "%accum_1_5 = select i1 %tmp_2, i32 %accum_0, i32 %accum_1_3_load_1" [mmm.cpp:75]   --->   Operation 101 'select' 'accum_1_5' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 102 [1/1] (0.44ns)   --->   "%accum_1_6 = select i1 %tmp_2, i32 %accum_1_load_1, i32 %accum_0" [mmm.cpp:75]   --->   Operation 102 'select' 'accum_1_6' <Predicate = true> <Delay = 0.44> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.44> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 103 [1/1] (0.42ns)   --->   "%store_ln75 = store i32 %accum_1_5, i32 %accum_1_3" [mmm.cpp:75]   --->   Operation 103 'store' 'store_ln75' <Predicate = true> <Delay = 0.42>
ST_24 : Operation 104 [1/1] (0.42ns)   --->   "%store_ln75 = store i32 %accum_1_6, i32 %accum_1" [mmm.cpp:75]   --->   Operation 104 'store' 'store_ln75' <Predicate = true> <Delay = 0.42>
ST_24 : Operation 105 [1/1] (0.00ns)   --->   "%br_ln0 = br void %.preheader"   --->   Operation 105 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 1.35ns.

 <State 1>: 2.08ns
The critical path consists of the following:
	'alloca' operation ('k') [10]  (0 ns)
	'load' operation ('k', mmm.cpp:75) on local variable 'k' [26]  (0 ns)
	'add' operation ('add_ln75', mmm.cpp:75) [41]  (0.842 ns)
	'getelementptr' operation ('B_addr', mmm.cpp:75) [43]  (0 ns)
	'load' operation ('B_load', mmm.cpp:75) on array 'B' [47]  (1.24 ns)

 <State 2>: 1.24ns
The critical path consists of the following:
	'load' operation ('A_load', mmm.cpp:75) on array 'A' [44]  (1.24 ns)

 <State 3>: 3.18ns
The critical path consists of the following:
	'fmul' operation ('mul', mmm.cpp:75) [50]  (3.18 ns)

 <State 4>: 3.18ns
The critical path consists of the following:
	'fmul' operation ('mul', mmm.cpp:75) [50]  (3.18 ns)

 <State 5>: 3.18ns
The critical path consists of the following:
	'fmul' operation ('mul', mmm.cpp:75) [50]  (3.18 ns)

 <State 6>: 3.18ns
The critical path consists of the following:
	'fmul' operation ('mul', mmm.cpp:75) [50]  (3.18 ns)

 <State 7>: 3.18ns
The critical path consists of the following:
	'fmul' operation ('mul', mmm.cpp:75) [50]  (3.18 ns)

 <State 8>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('add', mmm.cpp:75) [53]  (3.45 ns)

 <State 9>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('add', mmm.cpp:75) [53]  (3.45 ns)

 <State 10>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('add', mmm.cpp:75) [53]  (3.45 ns)

 <State 11>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('add', mmm.cpp:75) [53]  (3.45 ns)

 <State 12>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('add', mmm.cpp:75) [53]  (3.45 ns)

 <State 13>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('add', mmm.cpp:75) [53]  (3.45 ns)

 <State 14>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('add', mmm.cpp:75) [53]  (3.45 ns)

 <State 15>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('add', mmm.cpp:75) [53]  (3.45 ns)

 <State 16>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('accum[0]', mmm.cpp:75) [59]  (3.45 ns)

 <State 17>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('accum[0]', mmm.cpp:75) [59]  (3.45 ns)

 <State 18>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('accum[0]', mmm.cpp:75) [59]  (3.45 ns)

 <State 19>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('accum[0]', mmm.cpp:75) [59]  (3.45 ns)

 <State 20>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('accum[0]', mmm.cpp:75) [59]  (3.45 ns)

 <State 21>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('accum[0]', mmm.cpp:75) [59]  (3.45 ns)

 <State 22>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('accum[0]', mmm.cpp:75) [59]  (3.45 ns)

 <State 23>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('accum[0]', mmm.cpp:75) [59]  (3.45 ns)

 <State 24>: 0.876ns
The critical path consists of the following:
	'select' operation ('accum[1]', mmm.cpp:75) [60]  (0.449 ns)
	'store' operation ('store_ln75', mmm.cpp:75) of variable 'accum[1]', mmm.cpp:75 on local variable 'accum[1]' [63]  (0.427 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
