

================================================================
== Vitis HLS Report for 'mmm_basic'
================================================================
* Date:           Sun Jul 10 13:00:23 2022

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:47:39 MDT 2021)
* Project:        mmm_example
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvc1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  5.00 ns|  3.454 ns|     1.35 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +-----------+-----------+-----------+-----------+-----------+-----------+---------+
    |    Latency (cycles)   |   Latency (absolute)  |        Interval       | Pipeline|
    |    min    |    max    |    min    |    max    |    min    |    max    |   Type  |
    +-----------+-----------+-----------+-----------+-----------+-----------+---------+
    |  135004161|  135004161|  0.675 sec|  0.675 sec|  135004161|  135004161|       no|
    +-----------+-----------+-----------+-----------+-----------+-----------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----------+-----------+----------+-----------+-----------+-------+----------+
        |          |    Latency (cycles)   | Iteration|  Initiation Interval  |  Trip |          |
        | Loop Name|    min    |    max    |  Latency |  achieved |   target  | Count | Pipelined|
        +----------+-----------+-----------+----------+-----------+-----------+-------+----------+
        |- ai_aj   |  135004160|  135004160|      2060|          -|          -|  65536|        no|
        +----------+-----------+-----------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.42>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 5 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 6 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 7 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%p_loc = alloca i64 1"   --->   Operation 8 'alloca' 'p_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %B, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 9 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %A, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 10 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %C, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 11 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.42ns)   --->   "%store_ln31 = store i17 0, i17 %indvar_flatten" [mmm.cpp:31]   --->   Operation 12 'store' 'store_ln31' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 13 [1/1] (0.42ns)   --->   "%store_ln31 = store i9 0, i9 %i" [mmm.cpp:31]   --->   Operation 13 'store' 'store_ln31' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 14 [1/1] (0.42ns)   --->   "%store_ln31 = store i9 0, i9 %j" [mmm.cpp:31]   --->   Operation 14 'store' 'store_ln31' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%br_ln31 = br void" [mmm.cpp:31]   --->   Operation 15 'br' 'br_ln31' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 3.35>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i17 %indvar_flatten" [mmm.cpp:31]   --->   Operation 16 'load' 'indvar_flatten_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (1.09ns)   --->   "%icmp_ln31 = icmp_eq  i17 %indvar_flatten_load, i17 65536" [mmm.cpp:31]   --->   Operation 17 'icmp' 'icmp_ln31' <Predicate = true> <Delay = 1.09> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 18 [1/1] (0.86ns)   --->   "%add_ln31_1 = add i17 %indvar_flatten_load, i17 1" [mmm.cpp:31]   --->   Operation 18 'add' 'add_ln31_1' <Predicate = true> <Delay = 0.86> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%br_ln31 = br i1 %icmp_ln31, void %.split13, void" [mmm.cpp:31]   --->   Operation 19 'br' 'br_ln31' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%j_load = load i9 %j" [mmm.cpp:32]   --->   Operation 20 'load' 'j_load' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%i_load = load i9 %i" [mmm.cpp:31]   --->   Operation 21 'load' 'i_load' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.77ns)   --->   "%add_ln31 = add i9 %i_load, i9 1" [mmm.cpp:31]   --->   Operation 22 'add' 'add_ln31' <Predicate = (!icmp_ln31)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.88ns)   --->   "%icmp_ln32 = icmp_eq  i9 %j_load, i9 256" [mmm.cpp:32]   --->   Operation 23 'icmp' 'icmp_ln32' <Predicate = (!icmp_ln31)> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.39ns)   --->   "%select_ln31 = select i1 %icmp_ln32, i9 0, i9 %j_load" [mmm.cpp:31]   --->   Operation 24 'select' 'select_ln31' <Predicate = (!icmp_ln31)> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.39ns)   --->   "%select_ln31_1 = select i1 %icmp_ln32, i9 %add_ln31, i9 %i_load" [mmm.cpp:31]   --->   Operation 25 'select' 'select_ln31_1' <Predicate = (!icmp_ln31)> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%trunc_ln33 = trunc i9 %select_ln31_1" [mmm.cpp:33]   --->   Operation 26 'trunc' 'trunc_ln33' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%tmp_8_cast = bitconcatenate i16 @_ssdm_op_BitConcatenate.i16.i8.i8, i8 %trunc_ln33, i8 0" [mmm.cpp:36]   --->   Operation 27 'bitconcatenate' 'tmp_8_cast' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%trunc_ln36 = trunc i9 %select_ln31_1" [mmm.cpp:36]   --->   Operation 28 'trunc' 'trunc_ln36' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%zext_ln33 = zext i9 %select_ln31" [mmm.cpp:33]   --->   Operation 29 'zext' 'zext_ln33' <Predicate = (!icmp_ln31)> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.85ns)   --->   "%add_ln33 = add i16 %tmp_8_cast, i16 %zext_ln33" [mmm.cpp:33]   --->   Operation 30 'add' 'add_ln33' <Predicate = (!icmp_ln31)> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 31 [2/2] (2.07ns)   --->   "%call_ln31 = call void @mmm_basic_Pipeline_ak, i9 %select_ln31_1, i1 %trunc_ln36, i64 %A, i9 %select_ln31, i64 %B, i32 %p_loc" [mmm.cpp:31]   --->   Operation 31 'call' 'call_ln31' <Predicate = (!icmp_ln31)> <Delay = 2.07> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 32 [1/1] (0.77ns)   --->   "%add_ln32 = add i9 %select_ln31, i9 1" [mmm.cpp:32]   --->   Operation 32 'add' 'add_ln32' <Predicate = (!icmp_ln31)> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.42ns)   --->   "%store_ln31 = store i17 %add_ln31_1, i17 %indvar_flatten" [mmm.cpp:31]   --->   Operation 33 'store' 'store_ln31' <Predicate = (!icmp_ln31)> <Delay = 0.42>
ST_2 : Operation 34 [1/1] (0.42ns)   --->   "%store_ln31 = store i9 %select_ln31_1, i9 %i" [mmm.cpp:31]   --->   Operation 34 'store' 'store_ln31' <Predicate = (!icmp_ln31)> <Delay = 0.42>
ST_2 : Operation 35 [1/1] (0.42ns)   --->   "%store_ln32 = store i9 %add_ln32, i9 %j" [mmm.cpp:32]   --->   Operation 35 'store' 'store_ln32' <Predicate = (!icmp_ln31)> <Delay = 0.42>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%ret_ln40 = ret" [mmm.cpp:40]   --->   Operation 36 'ret' 'ret_ln40' <Predicate = (icmp_ln31)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 0.00>
ST_3 : Operation 37 [1/2] (0.00ns)   --->   "%call_ln31 = call void @mmm_basic_Pipeline_ak, i9 %select_ln31_1, i1 %trunc_ln36, i64 %A, i9 %select_ln31, i64 %B, i32 %p_loc" [mmm.cpp:31]   --->   Operation 37 'call' 'call_ln31' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 1.23>
ST_4 : Operation 38 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @ai_aj_str"   --->   Operation 38 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 65536, i64 65536, i64 65536"   --->   Operation 39 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 40 [1/1] (0.00ns)   --->   "%zext_ln33_1 = zext i16 %add_ln33" [mmm.cpp:33]   --->   Operation 40 'zext' 'zext_ln33_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "%C_addr = getelementptr i32 %C, i64 0, i64 %zext_ln33_1" [mmm.cpp:33]   --->   Operation 41 'getelementptr' 'C_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "%specloopname_ln29 = specloopname void @_ssdm_op_SpecLoopName, void @empty_3" [mmm.cpp:29]   --->   Operation 42 'specloopname' 'specloopname_ln29' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 43 [1/1] (0.00ns)   --->   "%p_loc_load = load i32 %p_loc"   --->   Operation 43 'load' 'p_loc_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 44 [1/1] (0.00ns)   --->   "%bitcast_ln36 = bitcast i32 %p_loc_load" [mmm.cpp:36]   --->   Operation 44 'bitcast' 'bitcast_ln36' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 45 [1/1] (1.23ns)   --->   "%store_ln36 = store i32 %bitcast_ln36, i16 %C_addr" [mmm.cpp:36]   --->   Operation 45 'store' 'store_ln36' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 65536> <RAM>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 46 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 1.35ns.

 <State 1>: 0.427ns
The critical path consists of the following:
	'alloca' operation ('indvar_flatten') [6]  (0 ns)
	'store' operation ('store_ln31', mmm.cpp:31) of constant 0 on local variable 'indvar_flatten' [11]  (0.427 ns)

 <State 2>: 3.36ns
The critical path consists of the following:
	'load' operation ('j_load', mmm.cpp:32) on local variable 'j' [21]  (0 ns)
	'icmp' operation ('icmp_ln32', mmm.cpp:32) [26]  (0.881 ns)
	'select' operation ('select_ln31', mmm.cpp:31) [27]  (0.398 ns)
	'call' operation ('call_ln31', mmm.cpp:31) to 'mmm_basic_Pipeline_ak' [37]  (2.08 ns)

 <State 3>: 0ns
The critical path consists of the following:

 <State 4>: 1.24ns
The critical path consists of the following:
	'getelementptr' operation ('C_addr', mmm.cpp:33) [35]  (0 ns)
	'store' operation ('store_ln36', mmm.cpp:36) of variable 'bitcast_ln36', mmm.cpp:36 on array 'C' [40]  (1.24 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
