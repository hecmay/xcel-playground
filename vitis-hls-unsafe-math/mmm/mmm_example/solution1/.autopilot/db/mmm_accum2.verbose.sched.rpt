

================================================================
== Vitis HLS Report for 'mmm_accum2'
================================================================
* Date:           Sun Jul 10 13:00:24 2022

* Version:        2021.2 (Build 3367213 on Tue Oct 19 02:47:39 MDT 2021)
* Project:        mmm_example
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu7ev-ffvc1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  |  5.00 ns|  3.454 ns|     1.35 ns|
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +-----------+-----------+-----------+-----------+-----------+-----------+---------+
    |    Latency (cycles)   |   Latency (absolute)  |        Interval       | Pipeline|
    |    min    |    max    |    min    |    max    |    min    |    max    |   Type  |
    +-----------+-----------+-----------+-----------+-----------+-----------+---------+
    |  144769025|  144769025|  0.724 sec|  0.724 sec|  144769025|  144769025|       no|
    +-----------+-----------+-----------+-----------+-----------+-----------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----------+-----------+----------+-----------+-----------+-------+----------+
        |          |    Latency (cycles)   | Iteration|  Initiation Interval  |  Trip |          |
        | Loop Name|    min    |    max    |  Latency |  achieved |   target  | Count | Pipelined|
        +----------+-----------+-----------+----------+-----------+-----------+-------+----------+
        |- ai_aj   |  144769024|  144769024|      2209|          -|          -|  65536|        no|
        +----------+-----------+-----------+----------+-----------+-----------+-------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 22
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 2 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.42>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%j = alloca i32 1"   --->   Operation 23 'alloca' 'j' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%accum_0_1 = alloca i32 1"   --->   Operation 24 'alloca' 'accum_0_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%accum_1_1 = alloca i32 1"   --->   Operation 25 'alloca' 'accum_1_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%i = alloca i32 1"   --->   Operation 26 'alloca' 'i' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%indvar_flatten = alloca i32 1"   --->   Operation 27 'alloca' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%accum_0_4_loc = alloca i64 1"   --->   Operation 28 'alloca' 'accum_0_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%accum_1_4_loc = alloca i64 1"   --->   Operation 29 'alloca' 'accum_1_4_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%accum_0_2_loc = alloca i64 1"   --->   Operation 30 'alloca' 'accum_0_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%accum_1_2_loc = alloca i64 1"   --->   Operation 31 'alloca' 'accum_1_2_loc' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %B, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 32 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i64 %A, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 33 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %C, void @empty, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 34 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.42ns)   --->   "%store_ln68 = store i17 0, i17 %indvar_flatten" [mmm.cpp:68]   --->   Operation 35 'store' 'store_ln68' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 36 [1/1] (0.42ns)   --->   "%store_ln68 = store i9 0, i9 %i" [mmm.cpp:68]   --->   Operation 36 'store' 'store_ln68' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 37 [1/1] (0.42ns)   --->   "%store_ln68 = store i9 0, i9 %j" [mmm.cpp:68]   --->   Operation 37 'store' 'store_ln68' <Predicate = true> <Delay = 0.42>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%br_ln68 = br void" [mmm.cpp:68]   --->   Operation 38 'br' 'br_ln68' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 1.52>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%indvar_flatten_load = load i17 %indvar_flatten" [mmm.cpp:68]   --->   Operation 39 'load' 'indvar_flatten_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (1.09ns)   --->   "%icmp_ln68 = icmp_eq  i17 %indvar_flatten_load, i17 65536" [mmm.cpp:68]   --->   Operation 40 'icmp' 'icmp_ln68' <Predicate = true> <Delay = 1.09> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 41 [1/1] (0.86ns)   --->   "%add_ln68_1 = add i17 %indvar_flatten_load, i17 1" [mmm.cpp:68]   --->   Operation 41 'add' 'add_ln68_1' <Predicate = true> <Delay = 0.86> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%br_ln68 = br i1 %icmp_ln68, void %.split13, void" [mmm.cpp:68]   --->   Operation 42 'br' 'br_ln68' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 43 [1/1] (0.00ns)   --->   "%accum_0_1_load = load i32 %accum_0_1"   --->   Operation 43 'load' 'accum_0_1_load' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%accum_1_1_load = load i32 %accum_1_1"   --->   Operation 44 'load' 'accum_1_1_load' <Predicate = (!icmp_ln68)> <Delay = 0.00>
ST_2 : Operation 45 [2/2] (0.42ns)   --->   "%call_ln0 = call void @mmm_accum2_Pipeline_1, i32 %accum_1_1_load, i32 %accum_0_1_load, i32 %accum_1_2_loc, i32 %accum_0_2_loc"   --->   Operation 45 'call' 'call_ln0' <Predicate = (!icmp_ln68)> <Delay = 0.42> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_2 : Operation 46 [1/1] (0.42ns)   --->   "%store_ln68 = store i17 %add_ln68_1, i17 %indvar_flatten" [mmm.cpp:68]   --->   Operation 46 'store' 'store_ln68' <Predicate = (!icmp_ln68)> <Delay = 0.42>
ST_2 : Operation 47 [1/1] (0.00ns)   --->   "%ret_ln80 = ret" [mmm.cpp:80]   --->   Operation 47 'ret' 'ret_ln80' <Predicate = (icmp_ln68)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 0.44>
ST_3 : Operation 48 [1/2] (0.44ns)   --->   "%call_ln0 = call void @mmm_accum2_Pipeline_1, i32 %accum_1_1_load, i32 %accum_0_1_load, i32 %accum_1_2_loc, i32 %accum_0_2_loc"   --->   Operation 48 'call' 'call_ln0' <Predicate = true> <Delay = 0.44> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 4 <SV = 3> <Delay = 3.35>
ST_4 : Operation 49 [1/1] (0.00ns)   --->   "%j_load = load i9 %j" [mmm.cpp:69]   --->   Operation 49 'load' 'j_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%i_load = load i9 %i" [mmm.cpp:68]   --->   Operation 50 'load' 'i_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.77ns)   --->   "%add_ln68 = add i9 %i_load, i9 1" [mmm.cpp:68]   --->   Operation 51 'add' 'add_ln68' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 52 [1/1] (0.88ns)   --->   "%icmp_ln69 = icmp_eq  i9 %j_load, i9 256" [mmm.cpp:69]   --->   Operation 52 'icmp' 'icmp_ln69' <Predicate = true> <Delay = 0.88> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.88> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 53 [1/1] (0.39ns)   --->   "%select_ln68 = select i1 %icmp_ln69, i9 0, i9 %j_load" [mmm.cpp:68]   --->   Operation 53 'select' 'select_ln68' <Predicate = true> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 54 [1/1] (0.39ns)   --->   "%select_ln68_1 = select i1 %icmp_ln69, i9 %add_ln68, i9 %i_load" [mmm.cpp:68]   --->   Operation 54 'select' 'select_ln68_1' <Predicate = true> <Delay = 0.39> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.39> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%trunc_ln72 = trunc i9 %select_ln68_1" [mmm.cpp:72]   --->   Operation 55 'trunc' 'trunc_ln72' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "%tmp_12_cast = bitconcatenate i16 @_ssdm_op_BitConcatenate.i16.i8.i8, i8 %trunc_ln72, i8 0" [mmm.cpp:75]   --->   Operation 56 'bitconcatenate' 'tmp_12_cast' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%trunc_ln75 = trunc i9 %select_ln68_1" [mmm.cpp:75]   --->   Operation 57 'trunc' 'trunc_ln75' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%zext_ln72 = zext i9 %select_ln68" [mmm.cpp:72]   --->   Operation 58 'zext' 'zext_ln72' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.85ns)   --->   "%add_ln72 = add i16 %tmp_12_cast, i16 %zext_ln72" [mmm.cpp:72]   --->   Operation 59 'add' 'add_ln72' <Predicate = true> <Delay = 0.85> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%accum_1_2_loc_load = load i32 %accum_1_2_loc"   --->   Operation 60 'load' 'accum_1_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%accum_0_2_loc_load = load i32 %accum_0_2_loc"   --->   Operation 61 'load' 'accum_0_2_loc_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 62 [2/2] (2.07ns)   --->   "%call_ln68 = call void @mmm_accum2_Pipeline_ak, i32 %accum_1_2_loc_load, i32 %accum_0_2_loc_load, i9 %select_ln68_1, i1 %trunc_ln75, i64 %A, i9 %select_ln68, i64 %B, i32 %accum_1_4_loc, i32 %accum_0_4_loc" [mmm.cpp:68]   --->   Operation 62 'call' 'call_ln68' <Predicate = true> <Delay = 2.07> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_4 : Operation 63 [1/1] (0.77ns)   --->   "%add_ln69 = add i9 %select_ln68, i9 1" [mmm.cpp:69]   --->   Operation 63 'add' 'add_ln69' <Predicate = true> <Delay = 0.77> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 64 [1/1] (0.42ns)   --->   "%store_ln68 = store i9 %select_ln68_1, i9 %i" [mmm.cpp:68]   --->   Operation 64 'store' 'store_ln68' <Predicate = true> <Delay = 0.42>
ST_4 : Operation 65 [1/1] (0.42ns)   --->   "%store_ln69 = store i9 %add_ln69, i9 %j" [mmm.cpp:69]   --->   Operation 65 'store' 'store_ln69' <Predicate = true> <Delay = 0.42>

State 5 <SV = 4> <Delay = 0.00>
ST_5 : Operation 66 [1/2] (0.00ns)   --->   "%call_ln68 = call void @mmm_accum2_Pipeline_ak, i32 %accum_1_2_loc_load, i32 %accum_0_2_loc_load, i9 %select_ln68_1, i1 %trunc_ln75, i64 %A, i9 %select_ln68, i64 %B, i32 %accum_1_4_loc, i32 %accum_0_4_loc" [mmm.cpp:68]   --->   Operation 66 'call' 'call_ln68' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 3.45>
ST_6 : Operation 67 [1/1] (0.00ns)   --->   "%accum_1_4_loc_load = load i32 %accum_1_4_loc"   --->   Operation 67 'load' 'accum_1_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 68 [1/1] (0.00ns)   --->   "%accum_0_4_loc_load = load i32 %accum_0_4_loc"   --->   Operation 68 'load' 'accum_0_4_loc_load' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 69 [8/8] (3.45ns)   --->   "%add3 = fadd i32 %accum_0_4_loc_load, i32 %accum_1_4_loc_load" [mmm.cpp:77]   --->   Operation 69 'fadd' 'add3' <Predicate = true> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 70 [1/1] (0.00ns)   --->   "%store_ln0 = store i32 %accum_1_4_loc_load, i32 %accum_1_1"   --->   Operation 70 'store' 'store_ln0' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 71 [1/1] (0.00ns)   --->   "%store_ln0 = store i32 %accum_0_4_loc_load, i32 %accum_0_1"   --->   Operation 71 'store' 'store_ln0' <Predicate = true> <Delay = 0.00>

State 7 <SV = 6> <Delay = 3.45>
ST_7 : Operation 72 [7/8] (3.45ns)   --->   "%add3 = fadd i32 %accum_0_4_loc_load, i32 %accum_1_4_loc_load" [mmm.cpp:77]   --->   Operation 72 'fadd' 'add3' <Predicate = true> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 3.45>
ST_8 : Operation 73 [6/8] (3.45ns)   --->   "%add3 = fadd i32 %accum_0_4_loc_load, i32 %accum_1_4_loc_load" [mmm.cpp:77]   --->   Operation 73 'fadd' 'add3' <Predicate = true> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 3.45>
ST_9 : Operation 74 [5/8] (3.45ns)   --->   "%add3 = fadd i32 %accum_0_4_loc_load, i32 %accum_1_4_loc_load" [mmm.cpp:77]   --->   Operation 74 'fadd' 'add3' <Predicate = true> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 3.45>
ST_10 : Operation 75 [4/8] (3.45ns)   --->   "%add3 = fadd i32 %accum_0_4_loc_load, i32 %accum_1_4_loc_load" [mmm.cpp:77]   --->   Operation 75 'fadd' 'add3' <Predicate = true> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 3.45>
ST_11 : Operation 76 [3/8] (3.45ns)   --->   "%add3 = fadd i32 %accum_0_4_loc_load, i32 %accum_1_4_loc_load" [mmm.cpp:77]   --->   Operation 76 'fadd' 'add3' <Predicate = true> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 3.45>
ST_12 : Operation 77 [2/8] (3.45ns)   --->   "%add3 = fadd i32 %accum_0_4_loc_load, i32 %accum_1_4_loc_load" [mmm.cpp:77]   --->   Operation 77 'fadd' 'add3' <Predicate = true> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 3.45>
ST_13 : Operation 78 [1/8] (3.45ns)   --->   "%add3 = fadd i32 %accum_0_4_loc_load, i32 %accum_1_4_loc_load" [mmm.cpp:77]   --->   Operation 78 'fadd' 'add3' <Predicate = true> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 3.45>
ST_14 : Operation 79 [8/8] (3.45ns)   --->   "%add4 = fadd i32 %add3, i32 0" [mmm.cpp:77]   --->   Operation 79 'fadd' 'add4' <Predicate = true> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 3.45>
ST_15 : Operation 80 [7/8] (3.45ns)   --->   "%add4 = fadd i32 %add3, i32 0" [mmm.cpp:77]   --->   Operation 80 'fadd' 'add4' <Predicate = true> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 3.45>
ST_16 : Operation 81 [6/8] (3.45ns)   --->   "%add4 = fadd i32 %add3, i32 0" [mmm.cpp:77]   --->   Operation 81 'fadd' 'add4' <Predicate = true> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 3.45>
ST_17 : Operation 82 [5/8] (3.45ns)   --->   "%add4 = fadd i32 %add3, i32 0" [mmm.cpp:77]   --->   Operation 82 'fadd' 'add4' <Predicate = true> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 3.45>
ST_18 : Operation 83 [4/8] (3.45ns)   --->   "%add4 = fadd i32 %add3, i32 0" [mmm.cpp:77]   --->   Operation 83 'fadd' 'add4' <Predicate = true> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 3.45>
ST_19 : Operation 84 [3/8] (3.45ns)   --->   "%add4 = fadd i32 %add3, i32 0" [mmm.cpp:77]   --->   Operation 84 'fadd' 'add4' <Predicate = true> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 3.45>
ST_20 : Operation 85 [2/8] (3.45ns)   --->   "%add4 = fadd i32 %add3, i32 0" [mmm.cpp:77]   --->   Operation 85 'fadd' 'add4' <Predicate = true> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 20> <Delay = 3.45>
ST_21 : Operation 86 [1/8] (3.45ns)   --->   "%add4 = fadd i32 %add3, i32 0" [mmm.cpp:77]   --->   Operation 86 'fadd' 'add4' <Predicate = true> <Delay = 3.45> <CoreInst = "FAddSub_fulldsp">   --->   Core 18 'FAddSub_fulldsp' <Latency = 7> <II = 1> <Delay = 3.45> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 1.23>
ST_22 : Operation 87 [1/1] (0.00ns)   --->   "%specloopname_ln0 = specloopname void @_ssdm_op_SpecLoopName, void @ai_aj_str"   --->   Operation 87 'specloopname' 'specloopname_ln0' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 88 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 65536, i64 65536, i64 65536"   --->   Operation 88 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 89 [1/1] (0.00ns)   --->   "%zext_ln72_1 = zext i16 %add_ln72" [mmm.cpp:72]   --->   Operation 89 'zext' 'zext_ln72_1' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 90 [1/1] (0.00ns)   --->   "%C_addr = getelementptr i32 %C, i64 0, i64 %zext_ln72_1" [mmm.cpp:72]   --->   Operation 90 'getelementptr' 'C_addr' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 91 [1/1] (0.00ns)   --->   "%specloopname_ln70 = specloopname void @_ssdm_op_SpecLoopName, void @empty_3" [mmm.cpp:70]   --->   Operation 91 'specloopname' 'specloopname_ln70' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 92 [1/1] (0.00ns)   --->   "%bitcast_ln77 = bitcast i32 %add4" [mmm.cpp:77]   --->   Operation 92 'bitcast' 'bitcast_ln77' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 93 [1/1] (1.23ns)   --->   "%store_ln77 = store i32 %bitcast_ln77, i16 %C_addr" [mmm.cpp:77]   --->   Operation 93 'store' 'store_ln77' <Predicate = true> <Delay = 1.23> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 65536> <RAM>
ST_22 : Operation 94 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 94 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 1.35ns.

 <State 1>: 0.427ns
The critical path consists of the following:
	'alloca' operation ('indvar_flatten') [8]  (0 ns)
	'store' operation ('store_ln68', mmm.cpp:68) of constant 0 on local variable 'indvar_flatten' [16]  (0.427 ns)

 <State 2>: 1.52ns
The critical path consists of the following:
	'load' operation ('indvar_flatten_load', mmm.cpp:68) on local variable 'indvar_flatten' [21]  (0 ns)
	'add' operation ('add_ln68_1', mmm.cpp:68) [23]  (0.863 ns)
	'store' operation ('store_ln68', mmm.cpp:68) of variable 'add_ln68_1', mmm.cpp:68 on local variable 'indvar_flatten' [55]  (0.427 ns)
	blocking operation 0.232 ns on control path)

 <State 3>: 0.446ns
The critical path consists of the following:
	'call' operation ('call_ln0') to 'mmm_accum2_Pipeline_1' [44]  (0.446 ns)

 <State 4>: 3.36ns
The critical path consists of the following:
	'load' operation ('j_load', mmm.cpp:69) on local variable 'j' [26]  (0 ns)
	'icmp' operation ('icmp_ln69', mmm.cpp:69) [33]  (0.881 ns)
	'select' operation ('select_ln68', mmm.cpp:68) [34]  (0.398 ns)
	'call' operation ('call_ln68', mmm.cpp:68) to 'mmm_accum2_Pipeline_ak' [47]  (2.08 ns)

 <State 5>: 0ns
The critical path consists of the following:

 <State 6>: 3.45ns
The critical path consists of the following:
	'load' operation ('accum_1_4_loc_load') on local variable 'accum_1_4_loc' [48]  (0 ns)
	'fadd' operation ('add3', mmm.cpp:77) [50]  (3.45 ns)

 <State 7>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('add3', mmm.cpp:77) [50]  (3.45 ns)

 <State 8>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('add3', mmm.cpp:77) [50]  (3.45 ns)

 <State 9>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('add3', mmm.cpp:77) [50]  (3.45 ns)

 <State 10>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('add3', mmm.cpp:77) [50]  (3.45 ns)

 <State 11>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('add3', mmm.cpp:77) [50]  (3.45 ns)

 <State 12>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('add3', mmm.cpp:77) [50]  (3.45 ns)

 <State 13>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('add3', mmm.cpp:77) [50]  (3.45 ns)

 <State 14>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('add4', mmm.cpp:77) [51]  (3.45 ns)

 <State 15>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('add4', mmm.cpp:77) [51]  (3.45 ns)

 <State 16>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('add4', mmm.cpp:77) [51]  (3.45 ns)

 <State 17>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('add4', mmm.cpp:77) [51]  (3.45 ns)

 <State 18>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('add4', mmm.cpp:77) [51]  (3.45 ns)

 <State 19>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('add4', mmm.cpp:77) [51]  (3.45 ns)

 <State 20>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('add4', mmm.cpp:77) [51]  (3.45 ns)

 <State 21>: 3.45ns
The critical path consists of the following:
	'fadd' operation ('add4', mmm.cpp:77) [51]  (3.45 ns)

 <State 22>: 1.24ns
The critical path consists of the following:
	'getelementptr' operation ('C_addr', mmm.cpp:72) [42]  (0 ns)
	'store' operation ('store_ln77', mmm.cpp:77) of variable 'bitcast_ln77', mmm.cpp:77 on array 'C' [53]  (1.24 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
