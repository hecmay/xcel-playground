-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top is
port (
    ap_local_block : OUT STD_LOGIC;
    ap_local_deadlock : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    A_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    A_ce0 : OUT STD_LOGIC;
    A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    B : OUT STD_LOGIC_VECTOR (31 downto 0);
    B_ap_vld : OUT STD_LOGIC );
end;


architecture behav of top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "top_top,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.857200,HLS_SYN_LAT=28843,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2233,HLS_SYN_LUT=2697,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (32 downto 0) := "000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (32 downto 0) := "000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (32 downto 0) := "000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (32 downto 0) := "000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (32 downto 0) := "000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (32 downto 0) := "000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (32 downto 0) := "000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (32 downto 0) := "000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (32 downto 0) := "000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (32 downto 0) := "001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (32 downto 0) := "010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (32 downto 0) := "100000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_fu_65_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_71 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_reduce_accum2_ii_is_4_fu_47_ap_ready : STD_LOGIC;
    signal grp_reduce_accum2_ii_is_4_fu_47_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal grp_reduce_accum4_ii_is_3_fu_53_ap_ready : STD_LOGIC;
    signal grp_reduce_accum4_ii_is_3_fu_53_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal grp_reduce_accum8_ii_is_1_fu_59_ap_ready : STD_LOGIC;
    signal grp_reduce_accum8_ii_is_1_fu_59_ap_done : STD_LOGIC;
    signal grp_reduce_basic_ii_is_3_fu_41_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_reduce_accum2_ii_is_4_fu_47_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_86 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reduce_accum4_ii_is_3_fu_53_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_91 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reduce_accum8_ii_is_1_fu_59_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_96 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reduce_basic_ii_is_3_fu_41_ap_start : STD_LOGIC;
    signal grp_reduce_basic_ii_is_3_fu_41_ap_done : STD_LOGIC;
    signal grp_reduce_basic_ii_is_3_fu_41_ap_idle : STD_LOGIC;
    signal grp_reduce_basic_ii_is_3_fu_41_ap_ready : STD_LOGIC;
    signal grp_reduce_basic_ii_is_3_fu_41_A_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_reduce_basic_ii_is_3_fu_41_A_ce0 : STD_LOGIC;
    signal grp_reduce_basic_ii_is_3_fu_41_grp_fu_101_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reduce_basic_ii_is_3_fu_41_grp_fu_101_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reduce_basic_ii_is_3_fu_41_grp_fu_101_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_reduce_basic_ii_is_3_fu_41_grp_fu_101_p_ce : STD_LOGIC;
    signal grp_reduce_accum2_ii_is_4_fu_47_ap_start : STD_LOGIC;
    signal grp_reduce_accum2_ii_is_4_fu_47_ap_idle : STD_LOGIC;
    signal grp_reduce_accum2_ii_is_4_fu_47_A_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_reduce_accum2_ii_is_4_fu_47_A_ce0 : STD_LOGIC;
    signal grp_reduce_accum2_ii_is_4_fu_47_grp_fu_101_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reduce_accum2_ii_is_4_fu_47_grp_fu_101_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reduce_accum2_ii_is_4_fu_47_grp_fu_101_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_reduce_accum2_ii_is_4_fu_47_grp_fu_101_p_ce : STD_LOGIC;
    signal grp_reduce_accum4_ii_is_3_fu_53_ap_start : STD_LOGIC;
    signal grp_reduce_accum4_ii_is_3_fu_53_ap_idle : STD_LOGIC;
    signal grp_reduce_accum4_ii_is_3_fu_53_A_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_reduce_accum4_ii_is_3_fu_53_A_ce0 : STD_LOGIC;
    signal grp_reduce_accum4_ii_is_3_fu_53_grp_fu_101_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reduce_accum4_ii_is_3_fu_53_grp_fu_101_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reduce_accum4_ii_is_3_fu_53_grp_fu_101_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_reduce_accum4_ii_is_3_fu_53_grp_fu_101_p_ce : STD_LOGIC;
    signal grp_reduce_accum8_ii_is_1_fu_59_ap_start : STD_LOGIC;
    signal grp_reduce_accum8_ii_is_1_fu_59_ap_idle : STD_LOGIC;
    signal grp_reduce_accum8_ii_is_1_fu_59_A_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_reduce_accum8_ii_is_1_fu_59_A_ce0 : STD_LOGIC;
    signal grp_reduce_accum8_ii_is_1_fu_59_grp_fu_101_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reduce_accum8_ii_is_1_fu_59_grp_fu_101_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reduce_accum8_ii_is_1_fu_59_grp_fu_101_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_reduce_accum8_ii_is_1_fu_59_grp_fu_101_p_ce : STD_LOGIC;
    signal grp_reduce_basic_ii_is_3_fu_41_ap_start_reg : STD_LOGIC := '0';
    signal grp_reduce_accum2_ii_is_4_fu_47_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_reduce_accum4_ii_is_3_fu_53_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_reduce_accum8_ii_is_1_fu_59_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal grp_fu_65_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_65_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal grp_fu_65_ce : STD_LOGIC;
    signal grp_fu_101_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_101_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_101_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_101_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component top_reduce_basic_ii_is_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_101_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_101_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_101_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_101_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_101_p_ce : OUT STD_LOGIC );
    end component;


    component top_reduce_accum2_ii_is_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_101_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_101_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_101_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_101_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_101_p_ce : OUT STD_LOGIC );
    end component;


    component top_reduce_accum4_ii_is_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_101_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_101_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_101_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_101_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_101_p_ce : OUT STD_LOGIC );
    end component;


    component top_reduce_accum8_ii_is_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        A_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_101_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_101_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_101_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_101_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_101_p_ce : OUT STD_LOGIC );
    end component;


    component top_fadd_32ns_32ns_32_8_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_reduce_basic_ii_is_3_fu_41 : component top_reduce_basic_ii_is_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reduce_basic_ii_is_3_fu_41_ap_start,
        ap_done => grp_reduce_basic_ii_is_3_fu_41_ap_done,
        ap_idle => grp_reduce_basic_ii_is_3_fu_41_ap_idle,
        ap_ready => grp_reduce_basic_ii_is_3_fu_41_ap_ready,
        A_address0 => grp_reduce_basic_ii_is_3_fu_41_A_address0,
        A_ce0 => grp_reduce_basic_ii_is_3_fu_41_A_ce0,
        A_q0 => A_q0,
        ap_return => grp_reduce_basic_ii_is_3_fu_41_ap_return,
        grp_fu_101_p_din0 => grp_reduce_basic_ii_is_3_fu_41_grp_fu_101_p_din0,
        grp_fu_101_p_din1 => grp_reduce_basic_ii_is_3_fu_41_grp_fu_101_p_din1,
        grp_fu_101_p_opcode => grp_reduce_basic_ii_is_3_fu_41_grp_fu_101_p_opcode,
        grp_fu_101_p_dout0 => grp_fu_101_p2,
        grp_fu_101_p_ce => grp_reduce_basic_ii_is_3_fu_41_grp_fu_101_p_ce);

    grp_reduce_accum2_ii_is_4_fu_47 : component top_reduce_accum2_ii_is_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reduce_accum2_ii_is_4_fu_47_ap_start,
        ap_done => grp_reduce_accum2_ii_is_4_fu_47_ap_done,
        ap_idle => grp_reduce_accum2_ii_is_4_fu_47_ap_idle,
        ap_ready => grp_reduce_accum2_ii_is_4_fu_47_ap_ready,
        A_address0 => grp_reduce_accum2_ii_is_4_fu_47_A_address0,
        A_ce0 => grp_reduce_accum2_ii_is_4_fu_47_A_ce0,
        A_q0 => A_q0,
        ap_return => grp_reduce_accum2_ii_is_4_fu_47_ap_return,
        grp_fu_101_p_din0 => grp_reduce_accum2_ii_is_4_fu_47_grp_fu_101_p_din0,
        grp_fu_101_p_din1 => grp_reduce_accum2_ii_is_4_fu_47_grp_fu_101_p_din1,
        grp_fu_101_p_opcode => grp_reduce_accum2_ii_is_4_fu_47_grp_fu_101_p_opcode,
        grp_fu_101_p_dout0 => grp_fu_101_p2,
        grp_fu_101_p_ce => grp_reduce_accum2_ii_is_4_fu_47_grp_fu_101_p_ce);

    grp_reduce_accum4_ii_is_3_fu_53 : component top_reduce_accum4_ii_is_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reduce_accum4_ii_is_3_fu_53_ap_start,
        ap_done => grp_reduce_accum4_ii_is_3_fu_53_ap_done,
        ap_idle => grp_reduce_accum4_ii_is_3_fu_53_ap_idle,
        ap_ready => grp_reduce_accum4_ii_is_3_fu_53_ap_ready,
        A_address0 => grp_reduce_accum4_ii_is_3_fu_53_A_address0,
        A_ce0 => grp_reduce_accum4_ii_is_3_fu_53_A_ce0,
        A_q0 => A_q0,
        ap_return => grp_reduce_accum4_ii_is_3_fu_53_ap_return,
        grp_fu_101_p_din0 => grp_reduce_accum4_ii_is_3_fu_53_grp_fu_101_p_din0,
        grp_fu_101_p_din1 => grp_reduce_accum4_ii_is_3_fu_53_grp_fu_101_p_din1,
        grp_fu_101_p_opcode => grp_reduce_accum4_ii_is_3_fu_53_grp_fu_101_p_opcode,
        grp_fu_101_p_dout0 => grp_fu_101_p2,
        grp_fu_101_p_ce => grp_reduce_accum4_ii_is_3_fu_53_grp_fu_101_p_ce);

    grp_reduce_accum8_ii_is_1_fu_59 : component top_reduce_accum8_ii_is_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reduce_accum8_ii_is_1_fu_59_ap_start,
        ap_done => grp_reduce_accum8_ii_is_1_fu_59_ap_done,
        ap_idle => grp_reduce_accum8_ii_is_1_fu_59_ap_idle,
        ap_ready => grp_reduce_accum8_ii_is_1_fu_59_ap_ready,
        A_address0 => grp_reduce_accum8_ii_is_1_fu_59_A_address0,
        A_ce0 => grp_reduce_accum8_ii_is_1_fu_59_A_ce0,
        A_q0 => A_q0,
        ap_return => grp_reduce_accum8_ii_is_1_fu_59_ap_return,
        grp_fu_101_p_din0 => grp_reduce_accum8_ii_is_1_fu_59_grp_fu_101_p_din0,
        grp_fu_101_p_din1 => grp_reduce_accum8_ii_is_1_fu_59_grp_fu_101_p_din1,
        grp_fu_101_p_opcode => grp_reduce_accum8_ii_is_1_fu_59_grp_fu_101_p_opcode,
        grp_fu_101_p_dout0 => grp_fu_101_p2,
        grp_fu_101_p_ce => grp_reduce_accum8_ii_is_1_fu_59_grp_fu_101_p_ce);

    fadd_32ns_32ns_32_8_full_dsp_1_U46 : component top_fadd_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_65_p0,
        din1 => grp_fu_65_p1,
        ce => grp_fu_65_ce,
        dout => grp_fu_65_p2);

    fadd_32ns_32ns_32_8_full_dsp_1_U47 : component top_fadd_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_101_p0,
        din1 => grp_fu_101_p1,
        ce => grp_fu_101_ce,
        dout => grp_fu_101_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_reduce_accum2_ii_is_4_fu_47_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_reduce_accum2_ii_is_4_fu_47_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    grp_reduce_accum2_ii_is_4_fu_47_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_reduce_accum2_ii_is_4_fu_47_ap_ready = ap_const_logic_1)) then 
                    grp_reduce_accum2_ii_is_4_fu_47_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_reduce_accum4_ii_is_3_fu_53_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_reduce_accum4_ii_is_3_fu_53_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    grp_reduce_accum4_ii_is_3_fu_53_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_reduce_accum4_ii_is_3_fu_53_ap_ready = ap_const_logic_1)) then 
                    grp_reduce_accum4_ii_is_3_fu_53_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_reduce_accum8_ii_is_1_fu_59_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_reduce_accum8_ii_is_1_fu_59_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                    grp_reduce_accum8_ii_is_1_fu_59_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_reduce_accum8_ii_is_1_fu_59_ap_ready = ap_const_logic_1)) then 
                    grp_reduce_accum8_ii_is_1_fu_59_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_reduce_basic_ii_is_3_fu_41_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_reduce_basic_ii_is_3_fu_41_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_reduce_basic_ii_is_3_fu_41_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_reduce_basic_ii_is_3_fu_41_ap_ready = ap_const_logic_1)) then 
                    grp_reduce_basic_ii_is_3_fu_41_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((grp_reduce_accum8_ii_is_1_fu_59_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((grp_reduce_accum4_ii_is_3_fu_53_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((grp_reduce_accum2_ii_is_4_fu_47_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then
                reg_71 <= grp_fu_65_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                tmp_1_reg_86 <= grp_reduce_accum2_ii_is_4_fu_47_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                tmp_2_reg_91 <= grp_reduce_accum4_ii_is_3_fu_53_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                tmp_3_reg_96 <= grp_reduce_accum8_ii_is_1_fu_59_ap_return;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state9, grp_reduce_accum2_ii_is_4_fu_47_ap_done, ap_CS_fsm_state17, grp_reduce_accum4_ii_is_3_fu_53_ap_done, ap_CS_fsm_state25, grp_reduce_accum8_ii_is_1_fu_59_ap_done, ap_CS_fsm_state2, grp_reduce_basic_ii_is_3_fu_41_ap_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_reduce_basic_ii_is_3_fu_41_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((grp_reduce_accum2_ii_is_4_fu_47_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((grp_reduce_accum4_ii_is_3_fu_53_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                if (((grp_reduce_accum8_ii_is_1_fu_59_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    A_address0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state17, ap_CS_fsm_state25, ap_CS_fsm_state2, grp_reduce_basic_ii_is_3_fu_41_A_address0, grp_reduce_accum2_ii_is_4_fu_47_A_address0, grp_reduce_accum4_ii_is_3_fu_53_A_address0, grp_reduce_accum8_ii_is_1_fu_59_A_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            A_address0 <= grp_reduce_accum8_ii_is_1_fu_59_A_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            A_address0 <= grp_reduce_accum4_ii_is_3_fu_53_A_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            A_address0 <= grp_reduce_accum2_ii_is_4_fu_47_A_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            A_address0 <= grp_reduce_basic_ii_is_3_fu_41_A_address0;
        else 
            A_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    A_ce0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state17, ap_CS_fsm_state25, ap_CS_fsm_state2, grp_reduce_basic_ii_is_3_fu_41_A_ce0, grp_reduce_accum2_ii_is_4_fu_47_A_ce0, grp_reduce_accum4_ii_is_3_fu_53_A_ce0, grp_reduce_accum8_ii_is_1_fu_59_A_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            A_ce0 <= grp_reduce_accum8_ii_is_1_fu_59_A_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            A_ce0 <= grp_reduce_accum4_ii_is_3_fu_53_A_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            A_ce0 <= grp_reduce_accum2_ii_is_4_fu_47_A_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            A_ce0 <= grp_reduce_basic_ii_is_3_fu_41_A_ce0;
        else 
            A_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    B <= grp_fu_65_p2;

    B_ap_vld_assign_proc : process(ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            B_ap_vld <= ap_const_logic_1;
        else 
            B_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state17_blk_assign_proc : process(grp_reduce_accum4_ii_is_3_fu_53_ap_done)
    begin
        if ((grp_reduce_accum4_ii_is_3_fu_53_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;

    ap_ST_fsm_state25_blk_assign_proc : process(grp_reduce_accum8_ii_is_1_fu_59_ap_done)
    begin
        if ((grp_reduce_accum8_ii_is_1_fu_59_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state25_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state25_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(grp_reduce_basic_ii_is_3_fu_41_ap_done)
    begin
        if ((grp_reduce_basic_ii_is_3_fu_41_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(grp_reduce_accum2_ii_is_4_fu_47_ap_done)
    begin
        if ((grp_reduce_accum2_ii_is_4_fu_47_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_logic_0;

    ap_ready_assign_proc : process(ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_101_ce_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state17, ap_CS_fsm_state25, ap_CS_fsm_state2, grp_reduce_basic_ii_is_3_fu_41_grp_fu_101_p_ce, grp_reduce_accum2_ii_is_4_fu_47_grp_fu_101_p_ce, grp_reduce_accum4_ii_is_3_fu_53_grp_fu_101_p_ce, grp_reduce_accum8_ii_is_1_fu_59_grp_fu_101_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_fu_101_ce <= grp_reduce_accum8_ii_is_1_fu_59_grp_fu_101_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_101_ce <= grp_reduce_accum4_ii_is_3_fu_53_grp_fu_101_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_101_ce <= grp_reduce_accum2_ii_is_4_fu_47_grp_fu_101_p_ce;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_101_ce <= grp_reduce_basic_ii_is_3_fu_41_grp_fu_101_p_ce;
        else 
            grp_fu_101_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_101_p0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state17, ap_CS_fsm_state25, ap_CS_fsm_state2, grp_reduce_basic_ii_is_3_fu_41_grp_fu_101_p_din0, grp_reduce_accum2_ii_is_4_fu_47_grp_fu_101_p_din0, grp_reduce_accum4_ii_is_3_fu_53_grp_fu_101_p_din0, grp_reduce_accum8_ii_is_1_fu_59_grp_fu_101_p_din0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_fu_101_p0 <= grp_reduce_accum8_ii_is_1_fu_59_grp_fu_101_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_101_p0 <= grp_reduce_accum4_ii_is_3_fu_53_grp_fu_101_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_101_p0 <= grp_reduce_accum2_ii_is_4_fu_47_grp_fu_101_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_101_p0 <= grp_reduce_basic_ii_is_3_fu_41_grp_fu_101_p_din0;
        else 
            grp_fu_101_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_101_p1_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state17, ap_CS_fsm_state25, ap_CS_fsm_state2, grp_reduce_basic_ii_is_3_fu_41_grp_fu_101_p_din1, grp_reduce_accum2_ii_is_4_fu_47_grp_fu_101_p_din1, grp_reduce_accum4_ii_is_3_fu_53_grp_fu_101_p_din1, grp_reduce_accum8_ii_is_1_fu_59_grp_fu_101_p_din1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            grp_fu_101_p1 <= grp_reduce_accum8_ii_is_1_fu_59_grp_fu_101_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            grp_fu_101_p1 <= grp_reduce_accum4_ii_is_3_fu_53_grp_fu_101_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            grp_fu_101_p1 <= grp_reduce_accum2_ii_is_4_fu_47_grp_fu_101_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_101_p1 <= grp_reduce_basic_ii_is_3_fu_41_grp_fu_101_p_din1;
        else 
            grp_fu_101_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_65_ce_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state9, grp_reduce_accum2_ii_is_4_fu_47_ap_done, ap_CS_fsm_state17, grp_reduce_accum4_ii_is_3_fu_53_ap_done, ap_CS_fsm_state25, grp_reduce_accum8_ii_is_1_fu_59_ap_done, ap_CS_fsm_state2, grp_reduce_basic_ii_is_3_fu_41_ap_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) or ((grp_reduce_accum8_ii_is_1_fu_59_ap_done = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state25)) or ((grp_reduce_accum4_ii_is_3_fu_53_ap_done = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((grp_reduce_accum2_ii_is_4_fu_47_ap_done = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_reduce_basic_ii_is_3_fu_41_ap_done = ap_const_logic_0)))) then 
            grp_fu_65_ce <= ap_const_logic_0;
        else 
            grp_fu_65_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_65_p0_assign_proc : process(reg_71, grp_reduce_basic_ii_is_3_fu_41_ap_return, ap_CS_fsm_state2, ap_CS_fsm_state10, ap_CS_fsm_state18, ap_CS_fsm_state26)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            grp_fu_65_p0 <= reg_71;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_65_p0 <= grp_reduce_basic_ii_is_3_fu_41_ap_return;
        else 
            grp_fu_65_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_65_p1_assign_proc : process(ap_CS_fsm_state2, tmp_1_reg_86, tmp_2_reg_91, tmp_3_reg_96, ap_CS_fsm_state10, ap_CS_fsm_state18, ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            grp_fu_65_p1 <= tmp_3_reg_96;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            grp_fu_65_p1 <= tmp_2_reg_91;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            grp_fu_65_p1 <= tmp_1_reg_86;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_fu_65_p1 <= ap_const_lv32_0;
        else 
            grp_fu_65_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_reduce_accum2_ii_is_4_fu_47_ap_start <= grp_reduce_accum2_ii_is_4_fu_47_ap_start_reg;
    grp_reduce_accum4_ii_is_3_fu_53_ap_start <= grp_reduce_accum4_ii_is_3_fu_53_ap_start_reg;
    grp_reduce_accum8_ii_is_1_fu_59_ap_start <= grp_reduce_accum8_ii_is_1_fu_59_ap_start_reg;
    grp_reduce_basic_ii_is_3_fu_41_ap_start <= grp_reduce_basic_ii_is_3_fu_41_ap_start_reg;
end behav;
