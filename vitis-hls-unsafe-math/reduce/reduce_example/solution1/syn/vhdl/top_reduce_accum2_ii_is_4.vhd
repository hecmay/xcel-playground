-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top_reduce_accum2_ii_is_4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    A_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    A_ce0 : OUT STD_LOGIC;
    A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_101_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_101_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_101_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_101_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_101_p_ce : OUT STD_LOGIC );
end;


architecture behav of top_reduce_accum2_ii_is_4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_ap_start : STD_LOGIC;
    signal grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_ap_done : STD_LOGIC;
    signal grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_ap_idle : STD_LOGIC;
    signal grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_ap_ready : STD_LOGIC;
    signal grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_accum_1_0_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_accum_1_0_out_ap_vld : STD_LOGIC;
    signal grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_accum_0_0_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_accum_0_0_out_ap_vld : STD_LOGIC;
    signal grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_ap_start : STD_LOGIC;
    signal grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_ap_done : STD_LOGIC;
    signal grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_ap_idle : STD_LOGIC;
    signal grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_ap_ready : STD_LOGIC;
    signal grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_A_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_A_ce0 : STD_LOGIC;
    signal grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_accum_1_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_accum_1_2_out_ap_vld : STD_LOGIC;
    signal grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_accum_0_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_accum_0_2_out_ap_vld : STD_LOGIC;
    signal grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_grp_fu_50_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_grp_fu_50_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_grp_fu_50_p_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_grp_fu_50_p_ce : STD_LOGIC;
    signal grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_fu_50_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_50_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_50_ce : STD_LOGIC;
    signal ap_return_preg : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component top_reduce_accum2_ii_is_4_Pipeline_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        accum_1_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        accum_1_0_out_ap_vld : OUT STD_LOGIC;
        accum_0_0_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        accum_0_0_out_ap_vld : OUT STD_LOGIC );
    end component;


    component top_reduce_accum2_ii_is_4_Pipeline_accum2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        accum_1_0_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        accum_0_0_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        A_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        accum_1_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        accum_1_2_out_ap_vld : OUT STD_LOGIC;
        accum_0_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        accum_0_2_out_ap_vld : OUT STD_LOGIC;
        grp_fu_50_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_50_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_50_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
        grp_fu_50_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_50_p_ce : OUT STD_LOGIC );
    end component;


    component top_fadd_32ns_32ns_32_8_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34 : component top_reduce_accum2_ii_is_4_Pipeline_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_ap_start,
        ap_done => grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_ap_done,
        ap_idle => grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_ap_idle,
        ap_ready => grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_ap_ready,
        accum_1_0_out => grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_accum_1_0_out,
        accum_1_0_out_ap_vld => grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_accum_1_0_out_ap_vld,
        accum_0_0_out => grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_accum_0_0_out,
        accum_0_0_out_ap_vld => grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_accum_0_0_out_ap_vld);

    grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40 : component top_reduce_accum2_ii_is_4_Pipeline_accum2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_ap_start,
        ap_done => grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_ap_done,
        ap_idle => grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_ap_idle,
        ap_ready => grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_ap_ready,
        accum_1_0_reload => grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_accum_1_0_out,
        accum_0_0_reload => grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_accum_0_0_out,
        A_address0 => grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_A_address0,
        A_ce0 => grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_A_ce0,
        A_q0 => A_q0,
        accum_1_2_out => grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_accum_1_2_out,
        accum_1_2_out_ap_vld => grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_accum_1_2_out_ap_vld,
        accum_0_2_out => grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_accum_0_2_out,
        accum_0_2_out_ap_vld => grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_accum_0_2_out_ap_vld,
        grp_fu_50_p_din0 => grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_grp_fu_50_p_din0,
        grp_fu_50_p_din1 => grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_grp_fu_50_p_din1,
        grp_fu_50_p_opcode => grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_grp_fu_50_p_opcode,
        grp_fu_50_p_dout0 => grp_fu_101_p_dout0,
        grp_fu_50_p_ce => grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_grp_fu_50_p_ce);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv32_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                    ap_return_preg <= grp_fu_101_p_dout0;
                end if; 
            end if;
        end if;
    end process;


    grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_ap_ready = ap_const_logic_1)) then 
                    grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_ap_ready = ap_const_logic_1)) then 
                    grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_ap_done, grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    A_address0 <= grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_A_address0;
    A_ce0 <= grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_A_ce0;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_ap_done)
    begin
        if ((grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_ap_done)
    begin
        if ((grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_return_preg, ap_CS_fsm_state12, grp_fu_101_p_dout0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            ap_return <= grp_fu_101_p_dout0;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;

    grp_fu_101_p_ce <= grp_fu_50_ce;
    grp_fu_101_p_din0 <= grp_fu_50_p0;
    grp_fu_101_p_din1 <= grp_fu_50_p1;
    grp_fu_101_p_opcode <= ap_const_lv2_0;

    grp_fu_50_ce_assign_proc : process(grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_grp_fu_50_p_ce, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_50_ce <= grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_grp_fu_50_p_ce;
        else 
            grp_fu_50_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_50_p0_assign_proc : process(grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_accum_0_2_out, grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_grp_fu_50_p_din0, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_50_p0 <= grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_grp_fu_50_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_50_p0 <= grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_accum_0_2_out;
        else 
            grp_fu_50_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_50_p1_assign_proc : process(grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_accum_1_2_out, grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_grp_fu_50_p_din1, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            grp_fu_50_p1 <= grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_grp_fu_50_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_50_p1 <= grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_accum_1_2_out;
        else 
            grp_fu_50_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_ap_start <= grp_reduce_accum2_ii_is_4_Pipeline_1_fu_34_ap_start_reg;
    grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_ap_start <= grp_reduce_accum2_ii_is_4_Pipeline_accum2_fu_40_ap_start_reg;
end behav;
